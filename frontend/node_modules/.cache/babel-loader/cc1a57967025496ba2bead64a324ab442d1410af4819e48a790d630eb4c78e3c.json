{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Documents\\\\ProyectoFinal\\\\FrontEndDondeEsta\\\\frontend\\\\src\\\\components\\\\Habitaciones.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport ConfirmacionModalHabitacion from \"./ConfirmacionModalHabitacion\";\nimport Addhab from \"./Addhab\";\nimport Modal from \"react-modal\";\nimport \"./Habitaciones.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Habitaciones = _ref => {\n  _s();\n  let {\n    darkmode\n  } = _ref;\n  const [habitaciones, setHabitaciones] = useState([]);\n  const [armarios, setArmarios] = useState([]);\n  const [isloadingarmarios, setIsLoadingArmarios] = useState(true);\n  const [isloadingHabitaciones, setIsLoadingHabitaciones] = useState(false);\n  const navigate = useNavigate();\n  const [slideIndex, setSlideIndex] = useState(0);\n  const [modalAbierto, setModalAbierto] = useState(false);\n  const [habitacionAEliminar, setHabitacionAEliminar] = useState(\"\");\n  const [modalAbiertoHabitacion, setModalAbiertoHabitacion] = useState(false);\n  const [modalAbiertoArmarios, setModalAbiertoArmarios] = useState(false);\n  const [selectedHabitacionId, setSelectedHabitacionId] = useState(\"\");\n  const listaHabitacionesRef = useRef(null);\n  const habitacioneRef = useRef([]);\n  const resaltarElementoCentrado = () => {\n    const scrollPos = listaHabitacionesRef.current.scrollTop;\n    const containerHeight = listaHabitacionesRef.current.offsetHeight;\n    habitacioneRef.current.forEach(habitacion => {\n      const scrollPos = listaHabitacionesRef.current.scrollTop / 2;\n      const rect = habitacion.getBoundingClientRect();\n      const elementTop = rect.top;\n      const elementHeight = rect.height;\n      const elementCenter = elementTop + elementHeight / 2 - scrollPos;\n      const distanceFromCenter = Math.abs(elementCenter - containerHeight / 2 + elementHeight / 2);\n      const maxDistance = 300;\n      if (distanceFromCenter < maxDistance) {\n        // Elemento en el centro\n        habitacion.classList.add(\"centrado\");\n        habitacion.classList.remove(\"outside\");\n      } else {\n        // Elementos fuera del centro\n        habitacion.classList.add(\"outside\");\n        habitacion.classList.remove(\"centrado\");\n      }\n    });\n  };\n  const verArmarios = habitacionId => {\n    setSelectedHabitacionId(habitacionId);\n    setModalAbiertoArmarios(true);\n    getArmarios(habitacionId);\n  };\n  const obtenerConfirmacion = nombre => {\n    setHabitacionAEliminar(nombre);\n    setModalAbierto(true);\n  };\n  const abrirModalHabitacion = () => {\n    setModalAbiertoHabitacion(true);\n  };\n  const cerrarModalHabitacion = () => {\n    setModalAbiertoHabitacion(false);\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  useEffect(() => {\n    const getHabitaciones = async () => {\n      const [token, userId] = extraerDatosDeUsuario();\n      try {\n        const response = await axios.get(process.env.REACT_APP_API_URL + \"/api/habitaciones/\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setHabitaciones(response.data);\n        setIsLoadingHabitaciones(true);\n      } catch (error) {\n        console.log(\"Error al obtener habitaciones\", error.message);\n      }\n    };\n    const getArmarios = async habitacionId => {\n      const [token, userId] = extraerDatosDeUsuario();\n      try {\n        const response = await axios.get(process.env.REACT_APP_API_URL + \"/api/armarios/\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            userId: userId,\n            habitacion: habitacionId\n          }\n        });\n        setArmarios(response.data);\n        setIsLoadingArmarios(false);\n      } catch (error) {\n        console.log(\"Error al obtener armarios\", error.message);\n      }\n    };\n    const extraerDatosDeUsuario = () => {\n      const datosRecuperar = JSON.parse(localStorage.getItem(\"datosUsuario\"));\n      if (datosRecuperar && datosRecuperar.token) {\n        return [datosRecuperar.token, datosRecuperar.userId];\n      } else {\n        navigate(\"/\");\n      }\n    };\n    getHabitaciones();\n    getArmarios();\n  }, []);\n  const eliminarHabitacion = nombre => {\n    const [token, userId] = extraerDatosDeUsuario();\n    axios.delete(process.env.REACT_APP_API_URL + `/api/habitaciones/borrar/${nombre}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: {\n        userId: userId\n      }\n    }).then(res => {\n      setHabitaciones(habitaciones.filter(h => h.nombre !== nombre));\n    }).catch(error => console.log(error));\n  };\n  const armariosGroupedByHabitacion = armarios.reduce((groups, armario) => {\n    const habitacionId = armario.habitacion;\n    const habitacion = habitaciones.find(h => h._id === habitacionId);\n    if (habitacion) {\n      const nombreHabitacion = habitacion._id;\n      if (groups[nombreHabitacion]) {\n        groups[nombreHabitacion].push(armario);\n      } else {\n        groups[nombreHabitacion] = [armario];\n      }\n    }\n    return groups;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"habitaciones\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cabeceraHabitaciones\",\n      children: [habitaciones.length === 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Agregar nivel 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h1Habitaciones\",\n        children: habitaciones.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"crear\",\n        className: \"Crear\",\n        onClick: abrirModalHabitacion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"textoEmergente\",\n        children: \"Crear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listaHabitaciones\",\n        ref: listaHabitacionesRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lista\",\n          children: habitaciones.map(habitacion => /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"habitacionConcreta\",\n            ref: el => {\n              if (el) {\n                habitacioneRef.current.push(el);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              onClick: () => verArmarios(habitacion._id),\n              children: habitacion.nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"eliminarHabitacion\",\n              onClick: () => obtenerConfirmacion(habitacion.nombre)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, habitacion._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), modalAbierto && /*#__PURE__*/_jsxDEV(ConfirmacionModalHabitacion, {\n      modalAbierto: modalAbierto,\n      setModalAbierto: setModalAbierto,\n      eliminarHabitacion: eliminarHabitacion,\n      habitacionAEliminar: habitacionAEliminar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), modalAbiertoHabitacion && /*#__PURE__*/_jsxDEV(Addhab, {\n      modalAbiertoHabitacion: modalAbiertoHabitacion,\n      cerrarModalHabitacion: cerrarModalHabitacion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this), modalAbiertoArmarios && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalAbiertoArmarios,\n      onRequestClose: () => setModalAbiertoArmarios(false),\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      ariaHideApp: false,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Armarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"armariosContainer\",\n        children: armariosGroupedByHabitacion[selectedHabitacionId] && armariosGroupedByHabitacion[selectedHabitacionId].map(armario => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: armario.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 21\n          }, this)\n        }, armario._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(Habitaciones, \"Mtmu9wKIFS4F/3d2r4/KClwiVXk=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Habitaciones;\nexport default Habitaciones;\nvar _c;\n$RefreshReg$(_c, \"Habitaciones\");","map":{"version":3,"names":["axios","React","useState","useEffect","useRef","useNavigate","useForm","ConfirmacionModalHabitacion","Addhab","Modal","jsxDEV","_jsxDEV","Habitaciones","_ref","_s","darkmode","habitaciones","setHabitaciones","armarios","setArmarios","isloadingarmarios","setIsLoadingArmarios","isloadingHabitaciones","setIsLoadingHabitaciones","navigate","slideIndex","setSlideIndex","modalAbierto","setModalAbierto","habitacionAEliminar","setHabitacionAEliminar","modalAbiertoHabitacion","setModalAbiertoHabitacion","modalAbiertoArmarios","setModalAbiertoArmarios","selectedHabitacionId","setSelectedHabitacionId","listaHabitacionesRef","habitacioneRef","resaltarElementoCentrado","scrollPos","current","scrollTop","containerHeight","offsetHeight","forEach","habitacion","rect","getBoundingClientRect","elementTop","top","elementHeight","height","elementCenter","distanceFromCenter","Math","abs","maxDistance","classList","add","remove","verArmarios","habitacionId","getArmarios","obtenerConfirmacion","nombre","abrirModalHabitacion","cerrarModalHabitacion","register","handleSubmit","formState","errors","getHabitaciones","token","userId","extraerDatosDeUsuario","response","get","process","env","REACT_APP_API_URL","headers","Authorization","data","error","console","log","message","params","datosRecuperar","JSON","parse","localStorage","getItem","eliminarHabitacion","delete","then","res","filter","h","catch","armariosGroupedByHabitacion","reduce","groups","armario","find","_id","nombreHabitacion","push","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","ref","map","el","isOpen","onRequestClose","overlayClassName","ariaHideApp","_c","$RefreshReg$"],"sources":["C:/Users/gabri/Documents/ProyectoFinal/FrontEndDondeEsta/frontend/src/components/Habitaciones.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ConfirmacionModalHabitacion from \"./ConfirmacionModalHabitacion\";\r\nimport Addhab from \"./Addhab\";\r\nimport Modal from \"react-modal\";\r\nimport \"./Habitaciones.css\";\r\n\r\nconst Habitaciones = ({ darkmode }) => {\r\n  const [habitaciones, setHabitaciones] = useState([]);\r\n  const [armarios, setArmarios] = useState([]);\r\n  const [isloadingarmarios, setIsLoadingArmarios] = useState(true);\r\n  const [isloadingHabitaciones, setIsLoadingHabitaciones] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [slideIndex, setSlideIndex] = useState(0);\r\n  const [modalAbierto, setModalAbierto] = useState(false);\r\n  const [habitacionAEliminar, setHabitacionAEliminar] = useState(\"\");\r\n  const [modalAbiertoHabitacion, setModalAbiertoHabitacion] = useState(false);\r\n  const [modalAbiertoArmarios, setModalAbiertoArmarios] = useState(false);\r\n  const [selectedHabitacionId, setSelectedHabitacionId] = useState(\"\");\r\n  const listaHabitacionesRef = useRef(null);\r\n  const habitacioneRef = useRef([]);\r\n\r\n  const resaltarElementoCentrado = () => {\r\n    const scrollPos = listaHabitacionesRef.current.scrollTop;\r\n    const containerHeight = listaHabitacionesRef.current.offsetHeight;\r\n\r\n    habitacioneRef.current.forEach((habitacion) => {\r\n      const scrollPos = listaHabitacionesRef.current.scrollTop / 2;\r\n      const rect = habitacion.getBoundingClientRect();\r\n      const elementTop = rect.top;\r\n      const elementHeight = rect.height;\r\n      const elementCenter = elementTop + elementHeight / 2 - scrollPos;\r\n      const distanceFromCenter = Math.abs(\r\n        elementCenter - containerHeight / 2 + elementHeight / 2\r\n      );\r\n      const maxDistance = 300;\r\n\r\n      if (distanceFromCenter < maxDistance) {\r\n        // Elemento en el centro\r\n        habitacion.classList.add(\"centrado\");\r\n        habitacion.classList.remove(\"outside\");\r\n      } else {\r\n        // Elementos fuera del centro\r\n        habitacion.classList.add(\"outside\");\r\n        habitacion.classList.remove(\"centrado\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const verArmarios = (habitacionId) => {\r\n    setSelectedHabitacionId(habitacionId);\r\n    setModalAbiertoArmarios(true);\r\n    getArmarios(habitacionId);\r\n  };\r\n\r\n  const obtenerConfirmacion = (nombre) => {\r\n    setHabitacionAEliminar(nombre);\r\n    setModalAbierto(true);\r\n  };\r\n\r\n  const abrirModalHabitacion = () => {\r\n    setModalAbiertoHabitacion(true);\r\n  };\r\n  const cerrarModalHabitacion = () => {\r\n    setModalAbiertoHabitacion(false);\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    const getHabitaciones = async () => {\r\n      const [token, userId] = extraerDatosDeUsuario();\r\n      try {\r\n        const response = await axios.get(\r\n          process.env.REACT_APP_API_URL + \"/api/habitaciones/\",\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        setHabitaciones(response.data);\r\n        setIsLoadingHabitaciones(true);\r\n      } catch (error) {\r\n        console.log(\"Error al obtener habitaciones\", error.message);\r\n      }\r\n    };\r\n\r\n    const getArmarios = async (habitacionId) => {\r\n      const [token, userId] = extraerDatosDeUsuario();\r\n      try {\r\n        const response = await axios.get(\r\n          process.env.REACT_APP_API_URL + \"/api/armarios/\",\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            params: {\r\n              userId: userId,\r\n              habitacion: habitacionId,\r\n            },\r\n          }\r\n        );\r\n        setArmarios(response.data);\r\n        setIsLoadingArmarios(false);\r\n      } catch (error) {\r\n        console.log(\"Error al obtener armarios\", error.message);\r\n      }\r\n    };\r\n\r\n    const extraerDatosDeUsuario = () => {\r\n      const datosRecuperar = JSON.parse(localStorage.getItem(\"datosUsuario\"));\r\n      if (datosRecuperar && datosRecuperar.token) {\r\n        return [datosRecuperar.token, datosRecuperar.userId];\r\n      } else {\r\n        navigate(\"/\");\r\n      }\r\n    };\r\n\r\n    getHabitaciones();\r\n    getArmarios();\r\n  }, []);\r\n\r\n  const eliminarHabitacion = (nombre) => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    axios\r\n      .delete(\r\n        process.env.REACT_APP_API_URL + `/api/habitaciones/borrar/${nombre}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          data: {\r\n            userId: userId,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setHabitaciones(habitaciones.filter((h) => h.nombre !== nombre));\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const armariosGroupedByHabitacion = armarios.reduce((groups, armario) => {\r\n    const habitacionId = armario.habitacion;\r\n    const habitacion = habitaciones.find((h) => h._id === habitacionId);\r\n\r\n    if (habitacion) {\r\n      const nombreHabitacion = habitacion._id;\r\n\r\n      if (groups[nombreHabitacion]) {\r\n        groups[nombreHabitacion].push(armario);\r\n      } else {\r\n        groups[nombreHabitacion] = [armario];\r\n      }\r\n    }\r\n\r\n    return groups;\r\n  }, {});\r\n\r\n  return (\r\n    <div className=\"habitaciones\">\r\n      <div className=\"cabeceraHabitaciones\">\r\n        {habitaciones.length === 0 && <h1>Agregar nivel 2</h1>}\r\n        <h1 className=\"h1Habitaciones\">{habitaciones.nombre}</h1>\r\n        <button\r\n          id=\"crear\"\r\n          className=\"Crear\"\r\n          onClick={abrirModalHabitacion}></button>\r\n        <div id=\"textoEmergente\">Crear</div>\r\n      </div>\r\n\r\n      <div>\r\n        <div className=\"listaHabitaciones\" ref={listaHabitacionesRef}>\r\n          <div className=\"lista\">\r\n            {habitaciones.map((habitacion) => (\r\n              <ul\r\n                className=\"habitacionConcreta\"\r\n                key={habitacion._id}\r\n                ref={(el) => {\r\n                  if (el) {\r\n                    habitacioneRef.current.push(el);\r\n                  }\r\n                }}>\r\n                <h2 onClick={() => verArmarios(habitacion._id)}>\r\n                  {habitacion.nombre}\r\n                </h2>\r\n                <br />\r\n                <button\r\n                  className=\"eliminarHabitacion\"\r\n                  onClick={() =>\r\n                    obtenerConfirmacion(habitacion.nombre)\r\n                  }></button>\r\n              </ul>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {modalAbierto && (\r\n        <ConfirmacionModalHabitacion\r\n          modalAbierto={modalAbierto}\r\n          setModalAbierto={setModalAbierto}\r\n          eliminarHabitacion={eliminarHabitacion}\r\n          habitacionAEliminar={habitacionAEliminar}\r\n        />\r\n      )}\r\n      {modalAbiertoHabitacion && (\r\n        <Addhab\r\n          modalAbiertoHabitacion={modalAbiertoHabitacion}\r\n          cerrarModalHabitacion={cerrarModalHabitacion}\r\n        />\r\n      )}\r\n      {modalAbiertoArmarios && (\r\n        <Modal\r\n          isOpen={modalAbiertoArmarios}\r\n          onRequestClose={() => setModalAbiertoArmarios(false)}\r\n          className=\"modal\"\r\n          overlayClassName=\"overlay\"\r\n          ariaHideApp={false}>\r\n          <h2>Armarios</h2>\r\n          <div className=\"armariosContainer\">\r\n            {armariosGroupedByHabitacion[selectedHabitacionId] &&\r\n              armariosGroupedByHabitacion[selectedHabitacionId].map(\r\n                (armario) => (\r\n                  <div key={armario._id}>\r\n                    <p>{armario.nombre}</p>\r\n                  </div>\r\n                )\r\n              )}\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Habitaciones;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}