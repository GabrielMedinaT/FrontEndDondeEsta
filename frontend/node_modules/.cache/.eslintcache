[{"C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\index.js":"1","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\App.js":"2","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\context\\AuthContext.js":"3","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\NavBar.jsx":"4","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\LogIn.jsx":"5","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\Buscador.jsx":"6","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\pages\\Home.jsx":"7","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\ModificarPass.jsx":"8","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\Registro.jsx":"9","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\Habitaciones.jsx":"10","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\MisCasas.jsx":"11","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\MisArmarios.jsx":"12","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\Cajones.jsx":"13","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\Cosas.jsx":"14","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\Addhab.jsx":"15","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\Addcasa.jsx":"16","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\ConfirmacionModalHabitacion.jsx":"17"},{"size":912,"mtime":1684762970711,"results":"18","hashOfConfig":"19"},{"size":978,"mtime":1684764523769,"results":"20","hashOfConfig":"19"},{"size":762,"mtime":1684762970710,"results":"21","hashOfConfig":"19"},{"size":16427,"mtime":1685615648038,"results":"22","hashOfConfig":"19"},{"size":6160,"mtime":1685914887914,"results":"23","hashOfConfig":"19"},{"size":4274,"mtime":1685218968322,"results":"24","hashOfConfig":"19"},{"size":4222,"mtime":1686074029811,"results":"25","hashOfConfig":"19"},{"size":4438,"mtime":1685218968327,"results":"26","hashOfConfig":"19"},{"size":4823,"mtime":1685218968329,"results":"27","hashOfConfig":"19"},{"size":6666,"mtime":1686075800098,"results":"28","hashOfConfig":"19"},{"size":5497,"mtime":1685914874403,"results":"29","hashOfConfig":"19"},{"size":9543,"mtime":1685461348098,"results":"30","hashOfConfig":"19"},{"size":7282,"mtime":1685475122643,"results":"31","hashOfConfig":"19"},{"size":18184,"mtime":1685544705153,"results":"32","hashOfConfig":"19"},{"size":6952,"mtime":1686046933845,"results":"33","hashOfConfig":"19"},{"size":2286,"mtime":1685542859208,"results":"34","hashOfConfig":"19"},{"size":1299,"mtime":1685218968323,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1m0dxw6",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\index.js",[],[],[],"C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\App.js",["98","99"],[],"import \"./App.css\";\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport LogIn from \"./components/LogIn\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Home from \"./pages/Home\";\r\nimport Buscador from \"./components/Buscador\";\r\nimport { AuthProvider } from \"./context/AuthContext\";\r\n\r\nfunction App() {\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const datosRecuperar = JSON.parse(localStorage.getItem(\"datosUsuario\"));\r\n    if (datosRecuperar && datosRecuperar.token) {\r\n      setToken(datosRecuperar.token);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <div className=\"App\">\r\n        <Router>\r\n          <NavBar />\r\n          <Routes>\r\n            <Route path=\"/home\" element={<Home />}></Route>\r\n            <Route path=\"/\" element={<LogIn />}></Route>\r\n          </Routes>\r\n        </Router>\r\n      </div>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\context\\AuthContext.js",[],[],"C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\NavBar.jsx",["100","101","102","103","104","105","106","107","108","109","110"],[],"import React, { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Home from \"../pages/Home\";\r\nimport axios from \"axios\";\r\nimport Buscador from \"./Buscador\";\r\nimport \"./NavBar.css\";\r\n\r\nconst NavBar = () => {\r\n  const navegar = useNavigate();\r\n  const { gestionarLogOut, isLoggedIn } = useContext(AuthContext);\r\n  const [menuDesplegable, setMenuDesplegable] = useState(false);\r\n  const [nombreUsuario, setNombreUsuario] = useState(\"\");\r\n  const [mostrarCasas, setMostrarCasas] = useState(false);\r\n  const [mostrarHabitacion, setMostrarHabitacion] = useState(false);\r\n  const [mostrarArmarios, setMostrarArmarios] = useState(false);\r\n  const [mostrarCajones, setMostrarCajones] = useState(false);\r\n  const [mostrarCosas, setMostrarCosas] = useState(false);\r\n  const [mostrarBuscador, setMostrarBuscador] = useState(false);\r\n  const [resultadoMostrarCasas, setResultadoMostrarCasas] = useState(false);\r\n  const [resultadoMostrarHabitacion, setResultadoMostrarHabitacion] =\r\n    useState(false);\r\n  const [resultadoMostrarArmario, setResultadoMostrarArmario] = useState(false);\r\n  const [resultadoMostrarCajones, setResultadoMostrarCajones] = useState(false);\r\n  const [resultadoMostrarCosas, setResultadoMostrarCosas] = useState(false);\r\n  const [resultadoMostrarBuscador, setResultadoMostrarBuscador] =\r\n    useState(false);\r\n  const [resetAnimation, setResetAnimation] = useState(false);\r\n  const [darkmode, setDarkmode] = useState(\r\n    localStorage.getItem(\"darkMode\") === \"true\"\r\n  );\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [casa, setCasas] = useState([]);\r\n  const [isLoadingCasas, setIsLoadingCasas] = useState(true);\r\n  const [habitaciones, setHabitaciones] = useState([]);\r\n  const [isLoadingHabitaciones, setIsLoadingHabitaciones] = useState(true);\r\n\r\n  const handleMouseEnter = () => {\r\n    setIsExpanded(true);\r\n  };\r\n  const handleMouseLeave = () => {\r\n    setIsExpanded(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCasas();\r\n    localStorage.setItem(\"darkMode\", darkmode);\r\n  }, [darkmode]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkmode(!darkmode);\r\n  };\r\n\r\n  const mostrarBuscadorFuncion = () => {\r\n    setMostrarBuscador(!mostrarBuscador);\r\n    setMostrarCasas(false);\r\n    setMostrarHabitacion(false);\r\n    setMostrarArmarios(false);\r\n    setMostrarCajones(false);\r\n    setMostrarCosas(false);\r\n\r\n    setResetAnimation(true);\r\n    setTimeout(() => {\r\n      setResetAnimation(false);\r\n    }, 500);\r\n    setResultadoMostrarBuscador(!mostrarBuscador);\r\n    setResultadoMostrarCasas(false);\r\n    setResultadoMostrarHabitacion(false);\r\n    setResultadoMostrarArmario(false);\r\n    setResultadoMostrarCajones(false);\r\n    setResultadoMostrarCosas(false);\r\n\r\n    contraerMenuDesplegable();\r\n  };\r\n\r\n  const mostrarCasasFuncion = () => {\r\n    setMostrarCasas(!mostrarCasas);\r\n    setResetAnimation(true);\r\n    setMostrarHabitacion(false);\r\n    setMostrarArmarios(false);\r\n    setMostrarCajones(false);\r\n    setMostrarCosas(false);\r\n    setMostrarBuscador(false);\r\n    contraerMenuDesplegable();\r\n    setTimeout(() => {\r\n      setResetAnimation(false);\r\n    }, 500);\r\n    setResultadoMostrarCasas(!mostrarCasas);\r\n    setResultadoMostrarHabitacion(false);\r\n    setResultadoMostrarArmario(false);\r\n    setResultadoMostrarCajones(false);\r\n    setResultadoMostrarCosas(false);\r\n    setResultadoMostrarBuscador(false);\r\n  };\r\n\r\n  const mostrarHabitacionFuncion = () => {\r\n    setMostrarHabitacion(!mostrarHabitacion);\r\n    setMostrarCasas(false);\r\n    setMostrarArmarios(false);\r\n    setMostrarCajones(false);\r\n    setMostrarCosas(false);\r\n    setResetAnimation(true);\r\n    setMostrarBuscador(false);\r\n    contraerMenuDesplegable();\r\n    setTimeout(() => {\r\n      setResetAnimation(false);\r\n    }, 500);\r\n    setResultadoMostrarHabitacion(!mostrarHabitacion);\r\n    setResultadoMostrarCasas(false);\r\n    setResultadoMostrarArmario(false);\r\n    setResultadoMostrarCajones(false);\r\n    setResultadoMostrarCosas(false);\r\n    setResultadoMostrarBuscador(false);\r\n  };\r\n\r\n  const mostrarArmariosFuncion = () => {\r\n    setMostrarArmarios(!mostrarArmarios);\r\n    setMostrarCasas(false);\r\n    setMostrarHabitacion(false);\r\n    setMostrarCajones(false);\r\n    setMostrarCosas(false);\r\n    setResetAnimation(true);\r\n    setMostrarBuscador(false);\r\n    contraerMenuDesplegable();\r\n    setTimeout(() => {\r\n      setResetAnimation(false);\r\n    }, 500);\r\n    setResultadoMostrarArmario(!mostrarArmarios);\r\n    setResultadoMostrarCasas(false);\r\n    setResultadoMostrarHabitacion(false);\r\n    setResultadoMostrarCajones(false);\r\n    setResultadoMostrarCosas(false);\r\n    setResultadoMostrarBuscador(false);\r\n  };\r\n\r\n  const mostrarCajonesFuncion = () => {\r\n    setMostrarCajones(!mostrarCajones);\r\n    setMostrarBuscador(false);\r\n    setMostrarCasas(false);\r\n    setMostrarHabitacion(false);\r\n    setMostrarArmarios(false);\r\n    setMostrarCosas(false);\r\n    setResetAnimation(true);\r\n    contraerMenuDesplegable();\r\n    setTimeout(() => {\r\n      setResetAnimation(false);\r\n    }, 500);\r\n    setResultadoMostrarCajones(!mostrarCajones);\r\n    setResultadoMostrarCasas(false);\r\n    setResultadoMostrarHabitacion(false);\r\n    setResultadoMostrarArmario(false);\r\n    setResultadoMostrarCosas(false);\r\n    setResultadoMostrarBuscador(false);\r\n  };\r\n\r\n  const mostrarCosasFuncion = () => {\r\n    setMostrarCosas(!mostrarCosas);\r\n    setMostrarBuscador(false);\r\n    setMostrarCasas(false);\r\n    setMostrarHabitacion(false);\r\n    setMostrarArmarios(false);\r\n    setMostrarCajones(false);\r\n    setResetAnimation(true);\r\n    contraerMenuDesplegable();\r\n    setTimeout(() => {\r\n      setResetAnimation(false);\r\n    }, 500);\r\n    setResultadoMostrarCosas(!mostrarCosas);\r\n    setResultadoMostrarCasas(false);\r\n    setResultadoMostrarHabitacion(false);\r\n    setResultadoMostrarArmario(false);\r\n    setResultadoMostrarCajones(false);\r\n    setResultadoMostrarBuscador(false);\r\n  };\r\n\r\n  const extraerDatosDeUsuario = () => {\r\n    const datosRecuperar = JSON.parse(localStorage.getItem(\"datosUsuario\"));\r\n    if (datosRecuperar && datosRecuperar.token) {\r\n      return {\r\n        token: datosRecuperar.token,\r\n        userId: datosRecuperar.userId,\r\n        nombre: datosRecuperar.nombre,\r\n      };\r\n    } else {\r\n      // navigate(\"/\");\r\n      return { token: null, userId: null, nombre: null };\r\n    }\r\n  };\r\n\r\n  const verUsuario = async () => {\r\n    try {\r\n      const { token, userId } = extraerDatosDeUsuario();\r\n      const response = await axios.get(\r\n        process.env.REACT_APP_API_URL + \"/api/usuarios/\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          params: {\r\n            userId,\r\n          },\r\n        }\r\n      );\r\n      const usuario = response.data.usuarios.find((u) => u._id === userId);\r\n\r\n      setNombreUsuario(usuario.nombre);\r\n    } catch (error) {\r\n      console.log(\"no se puede obtener el usuario\");\r\n    }\r\n  };\r\n\r\n  //*OBTENER CASAS\r\n\r\n  const getCasas = async () => {\r\n    const { token, userId } = extraerDatosDeUsuario();\r\n    try {\r\n      const response = await axios.get(\r\n        process.env.REACT_APP_API_URL + \"/api/casas/\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          params: {\r\n            userId: userId,\r\n            casaId: casa._id,\r\n          },\r\n        }\r\n      );\r\n      setCasas(response.data);\r\n      setIsLoadingCasas(false);\r\n    } catch (error) {\r\n      console.log(\"no se puede obtener las casas\");\r\n    }\r\n  };\r\n  //*OBTENER HABITACIONES\r\n\r\n  const getHabitaciones = async () => {\r\n    const { token, userId } = extraerDatosDeUsuario();\r\n    try {\r\n      const response = await axios.get(\r\n        process.env.REACT_APP_API_URL + \"/api/habitaciones/\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          params: {\r\n            userId: userId,\r\n          },\r\n        }\r\n      );\r\n      setHabitaciones(response.data);\r\n      setIsLoadingHabitaciones(false);\r\n    } catch (error) {\r\n      console.log(\"no se puede obtener las habitaciones\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      verUsuario();\r\n      getCasas();\r\n      getHabitaciones();\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const Logout = () => {\r\n    gestionarLogOut();\r\n    setResultadoMostrarCosas(false);\r\n    setResultadoMostrarCasas(false);\r\n    setResultadoMostrarHabitacion(false);\r\n    setResultadoMostrarArmario(false);\r\n    setResultadoMostrarCajones(false);\r\n    setResultadoMostrarBuscador(false);\r\n    setMostrarCosas(false);\r\n    setMostrarCasas(false);\r\n    setMostrarHabitacion(false);\r\n    setMostrarArmarios(false);\r\n    setMostrarCajones(false);\r\n    setMostrarBuscador(false);\r\n    navegar(\"/\");\r\n  };\r\n  const login = () => {\r\n    navegar(\"/home\");\r\n  };\r\n\r\n  const registro = () => {\r\n    navegar(\"/registro\");\r\n  };\r\n  const home = () => {\r\n    navegar(\"/home\");\r\n  };\r\n\r\n  const toggleMenuDesplegable = () => {\r\n    setMenuDesplegable(!menuDesplegable);\r\n  };\r\n  const contraerMenuDesplegable = () => {\r\n    setMenuDesplegable(false);\r\n  };\r\n  const casasLength = casa.length;\r\n  const habitacionesLength = habitaciones.length;\r\n\r\n  return (\r\n    <div className=\"NavBarSuperior\">\r\n      {isLoggedIn ? (\r\n        <>\r\n          <div\r\n            className={isExpanded ? \"lateral-expandido\" : \"lateral\"}\r\n            onMouseEnter={handleMouseEnter}\r\n            onMouseLeave={handleMouseLeave}>\r\n            <div className=\"cambiarTema\">\r\n              <label htmlFor=\"theme\" className=\"theme\">\r\n                <span className=\"theme__toggle-wrap\">\r\n                  <input\r\n                    id=\"theme\"\r\n                    className=\"theme__toggle\"\r\n                    type=\"checkbox\"\r\n                    role=\"switch\"\r\n                    name=\"theme\"\r\n                    value=\"dark\"\r\n                    checked={darkmode}\r\n                    onChange={toggleDarkMode}\r\n                  />\r\n                  <span className=\"theme__icon\">\r\n                    <span className=\"theme__icon-part\"></span>\r\n                    <span className=\"theme__icon-part\"></span>\r\n                    <span className=\"theme__icon-part\"></span>\r\n                    <span className=\"theme__icon-part\"></span>\r\n                    <span className=\"theme__icon-part\"></span>\r\n                    <span className=\"theme__icon-part\"></span>\r\n                    <span className=\"theme__icon-part\"></span>\r\n                    <span className=\"theme__icon-part\"></span>\r\n                    <span className=\"theme__icon-part\"></span>\r\n                  </span>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <button\r\n              id=\"iconosBarraLateral\"\r\n              className={`verUsuario ${\r\n                resetAnimation ? \"reset-animation\" : \"\"\r\n              }`}\r\n              onClick={() => home()}>\r\n              <h3 className=\"textoDeIconos\">{nombreUsuario}</h3>\r\n            </button>\r\n            {isExpanded ? <div className=\"textoLateralExpandido\"></div> : null}\r\n            <button\r\n              id=\"iconosBarraLateral\"\r\n              onClick={mostrarBuscadorFuncion}\r\n              className=\"verBuscar\">\r\n              <h3 className=\"textoDeIconos\">Buscar</h3>\r\n            </button>\r\n\r\n            <button\r\n              id=\"iconosBarraLateral\"\r\n              onClick={mostrarCasasFuncion}\r\n              className={`verCasa ${darkmode ? \"reset-animation\" : \"\"}`}>\r\n              <h3 className=\"textoDeIconos\">\r\n                {casasLength === 0 ? (\r\n                  \"Nivel 1\"\r\n                ) : isLoadingCasas ? (\r\n                  <div className=\"arc\"></div>\r\n                ) : (\r\n                  casa[0].nombre\r\n                )}\r\n              </h3>\r\n            </button>\r\n\r\n            <button\r\n              id=\"iconosBarraLateral\"\r\n              onClick={mostrarHabitacionFuncion}\r\n              className={`verHabitacion ${darkmode ? \"reset-animation\" : \"\"}`}>\r\n              <h3 className=\"textoDeIconos\">\r\n                {habitacionesLength === 0\r\n                  ? \"Nivel 2\"\r\n                  : isLoadingHabitaciones\r\n                  ? \"Cargando \"\r\n                  : habitaciones[0].tipo}\r\n              </h3>\r\n            </button>\r\n            <button\r\n              id=\"iconosBarraLateral\"\r\n              onClick={mostrarArmariosFuncion}\r\n              className={`verMueble ${darkmode ? \"reset-animation\" : \"\"}`}>\r\n              <h3 className=\"textoDeIconos\">Muebles</h3>\r\n            </button>\r\n            <button\r\n              id=\"iconosBarraLateral\"\r\n              onClick={mostrarCajonesFuncion}\r\n              className={`verCajones ${darkmode ? \"reset-animation\" : \"\"}`}>\r\n              <h3 className=\"textoDeIconos\">Cajones</h3>\r\n            </button>\r\n            <button\r\n              id=\"iconosBarraLateral\"\r\n              onClick={mostrarCosasFuncion}\r\n              className={`verCosas ${darkmode ? \"reset-animation\" : \"\"}`}>\r\n              <h3 className=\"textoDeIconos\">Cosas</h3>\r\n            </button>\r\n\r\n            <button\r\n              id=\"iconosBarraLateral\"\r\n              className={`verSalir ${resetAnimation ? \"reset-animation\" : \"\"}`}\r\n              onClick={Logout}>\r\n              <h3 className=\"textoDeIconos\">Salir</h3>\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={darkmode ? \"NavBar-Dark\" : \"NavBar\"}>\r\n            <div\r\n              className={darkmode ? \"BarraNavegacion-Dark\" : \"BarraNavegacion\"}>\r\n              <div className={darkmode ? \"logo-Dark\" : \"Logo\"}></div>\r\n              <div className=\"botonessinlogear\">\r\n                <button className=\"botonlogin\" onClick={() => login()}>\r\n                  Login\r\n                </button>\r\n                <button className=\"botonbienvenido\">Bienvenido/a</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      <div className=\"MenuHamburguesa\" onClick={() => toggleMenuDesplegable()}>\r\n        &#9776;\r\n      </div>\r\n\r\n      {isLoggedIn && (\r\n        <div>\r\n          <div\r\n            className={`MenuDesplegable ${\r\n              menuDesplegable ? \"MenuDesplegable--activo\" : \"\"\r\n            }`}>\r\n            <ul>\r\n              <li>\r\n                <a onClick={() => mostrarCasasFuncion()}>\r\n                  {mostrarCasas ? \"Ocultar Casa\" : \"Ver Casa\"}\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a onClick={() => mostrarHabitacionFuncion()}>\r\n                  {mostrarHabitacion\r\n                    ? \"Ocultar Habitaciones\"\r\n                    : \"Ver Habitaciones\"}\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a onClick={() => mostrarArmariosFuncion()}>\r\n                  {mostrarArmarios ? \"Ocultar Armarios\" : \"Ver Armarios\"}\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a onClick={() => mostrarCajonesFuncion()}>\r\n                  {mostrarCajones ? \"Ocultar Cajones\" : \"Ver Cajones\"}\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a onClick={() => mostrarCosasFuncion()}>\r\n                  {mostrarCosas ? \"Ocultar Cosas\" : \"Ver Cosas\"}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!isLoggedIn && (\r\n        <div\r\n          className={`MenuDesplegable ${\r\n            menuDesplegable ? \"MenuDesplegable--activo\" : \"\"\r\n          }`}>\r\n          <ul>\r\n            <li>\r\n              <a href=\"#\" onClick={() => login()}>\r\n                Log In\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\" onClick={() => registro()}>\r\n                Registro\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n      <Home\r\n        mostrarDatos={{\r\n          mostrarCasas: resultadoMostrarCasas,\r\n          mostrarHabitacion: resultadoMostrarHabitacion,\r\n          mostrarArmarios: resultadoMostrarArmario,\r\n          mostrarCajones: resultadoMostrarCajones,\r\n          mostrarCosas: resultadoMostrarCosas,\r\n          mostrarBuscador: resultadoMostrarBuscador,\r\n        }}\r\n        darkmode={darkmode}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\LogIn.jsx",["111","112"],[],"import { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { send } from \"emailjs-com\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport Registro from \"./Registro\";\r\nimport ModificarPass from \"./ModificarPass\";\r\nimport \"./Login.css\";\r\n\r\n\r\nconst LogIn = () => {\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const { gestionarLogIn } = useContext(AuthContext);\r\n  const [showLogin, setShowLogin] = useState(true);\r\n  const [verCambiar, setVerCambiar] = useState(true);\r\n  const [darkmode, setDarkmode] = useState(\r\n    localStorage.getItem(\"darkMode\") === \"true\"\r\n  );\r\n\r\n  const cambiarpass = () => {\r\n    setVerCambiar(false);\r\n  };\r\n  // console.log(verCambiar);\r\n\r\n  const toggleForm = () => {\r\n    setShowLogin(!showLogin);\r\n  };\r\n\r\n  const gestorFormulario = async (data) => {\r\n    try {\r\n      const response = await axios.post(\r\n        process.env.REACT_APP_API_URL + \"/api/usuarios/login\",\r\n        {\r\n          email: data.email,\r\n          password: data.password,\r\n        }\r\n      );\r\n      // console.log(\"Todo correcto\", response.data);\r\n      localStorage.setItem(\"datosUsuario\", JSON.stringify(response.data));\r\n      gestionarLogIn(\r\n        response.data.token,\r\n        response.data.userId,\r\n        response.data.nombre\r\n      );\r\n      navigate(\"/home\");\r\n    } catch (error) {\r\n      // console.log(\"algo falló\");\r\n      if (error.response.status === 500) {\r\n        setPasswordError(\r\n          <>\r\n            Usuario o contraseña incorrecta. Ha olvidado su contraseña? Pulse{\" \"}\r\n            <span className=\"reset-link\">\r\n              <Link href=\"\" onClick={cambiarpass}>\r\n                aqui\r\n              </Link>\r\n            </span>{\" \"}\r\n            para reestablecerla.\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  return (\r\n    <div className={darkmode ? \"principal-Dark\" : \"principal\"}>\r\n      <div className={darkmode ? \"present-Dark\" : \"present\"}>\r\n        <h1 className=\"titulo\">Encuentra tus cosas en segundos con Where Is</h1>\r\n        <h2 className=\"subtitulo\">\r\n          Crea tu propia base de datos de tu casa y organiza tus cosas como\r\n          nunca antes\r\n        </h2>\r\n        <br />\r\n        <p className={darkmode ? \"descripcion-Dark\" : \"descripcion\"}>\r\n          ¿Alguna vez has perdido algo en tu casa y no sabes por dónde empezar a\r\n          buscar? Where is es la solución que estabas buscando. Con nuestra\r\n          aplicación, podrás crear tu propia base de datos de tu casa y\r\n          organizar todas tus cosas de manera fácil y sencilla. ¿Cómo funciona?\r\n          Primero, crea tu perfil y agrega tus habitaciones, armarios y cajones.\r\n          Luego, agrega tus cosas a cada uno de ellos. Podrás agregar detalles\r\n          como descripción, foto, fecha de adquisición y más. Una vez que hayas\r\n          agregado tus cosas, podrás buscarlas fácilmente en nuestra aplicación.\r\n          Simplemente ingresa el nombre de lo que estás buscando y te\r\n          mostraremos dónde está. ¡No más perder tiempo buscando cosas perdidas!\r\n          Pero eso no es todo, nuestra aplicación también te permite crear\r\n          listas de cosas que necesitas comprar, llevar un registro de tus cosas\r\n          prestadas y mucho más. ¡Descubre lo fácil que es organizar tu casa con\r\n          Where is ! Regístrate ahora y comienza a disfrutar de una vida más\r\n          organizada.\r\n        </p>\r\n      </div>\r\n      <div className=\"formulariosLoginSingUp\">\r\n        {showLogin ? (\r\n          <div className=\"login\">\r\n            <h2>Log in</h2>\r\n            <br />\r\n            <form\r\n              className=\"formulario\"\r\n              action=\"\"\r\n              onSubmit={handleSubmit(gestorFormulario)}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                className=\"password\"\r\n                {...register(\"email\", {\r\n                  pattern:\r\n                    /^(?![_.-])((?![_.-][_.-])[a-zA-Z\\d_.-]){0,63}[a-zA-Z\\d]@((?!-)((?!--)[a-zA-Z\\d-]){0,63}[a-zA-Z\\d]\\.){1,2}([a-zA-Z]{2,14}\\.)?[a-zA-Z]{2,14}$/,\r\n                  required: true,\r\n                })}\r\n              />\r\n              {errors.email && errors.email.type === \"required\" && (\r\n                <p>Campo email requerido</p>\r\n              )}\r\n              {errors.email && errors.email.type === \"pattern\" && (\r\n                <p>Formato de email incorrecto</p>\r\n              )}\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                className=\"password\"\r\n                {...register(\"password\", {\r\n                  minLength: 5,\r\n                  required: true,\r\n                })}\r\n              />\r\n              {errors.password && errors.password.type === \"required\" && (\r\n                <p>Campo requerido</p>\r\n              )}\r\n              {errors.password && errors.password.type === \"minLength\" && (\r\n                <p>Debe tener al menos 5 caracteres </p>\r\n              )}\r\n              {passwordError && <p className=\"error\">{passwordError}</p>}\r\n              <br />\r\n              <div className=\"botonesLogIn\">\r\n                <button className=\"EnviarLogin\" type=\"submit\">\r\n                  Enviar\r\n                </button>\r\n                <br />\r\n                <br />\r\n                <button onClick={toggleForm}>Sign up</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <div className=\"formulario\">\r\n            <Registro />\r\n\r\n            <button onClick={toggleForm}>Log in</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {verCambiar === false && (\r\n        // <div className=\"verCambiar\">\r\n        <ModificarPass />\r\n        // </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\Buscador.jsx",["113","114","115","116"],[],"import React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Buscador = ({darkmode}) => {\r\n  const [query, setQuery] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loadingCosas, setLoadingCosas] = useState(false);\r\n  const [cosas, setCosas] = useState([]);\r\n  const [busquedasRecientes, setBusquedasRecientes] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const extraerDatosDeUsuario = () => {\r\n    const datosRecuperar = JSON.parse(localStorage.getItem(\"datosUsuario\"));\r\n    if (datosRecuperar && datosRecuperar.token) {\r\n      return [datosRecuperar.token, datosRecuperar.userId];\r\n    } else {\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (query) {\r\n      search(query);\r\n      \r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const searchQuery = event.target.value;\r\n    setQuery(searchQuery);\r\n    search(searchQuery); // Realizar búsqueda en cada cambio\r\n  };\r\n\r\n  const handleRecentSearch = (searchQuery) => {\r\n    setQuery(searchQuery);\r\n    search(searchQuery);\r\n  };\r\n\r\n  const search = async (searchQuery) => {\r\n    if (searchQuery === '') {\r\n      setError('Por favor, introduce un término de búsqueda');\r\n      setCosas([]);\r\n    } else {\r\n      setError('');\r\n      const [token, userId] = extraerDatosDeUsuario();\r\n      try {\r\n        const response = await axios.get(\r\n          process.env.REACT_APP_API_URL + \"/api/cosas/buscar/\" + searchQuery,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n  \r\n        const results = response.data;\r\n        // Comprueba si hay resultados con un nombre diferente al término de búsqueda\r\n        const matchedResults = results.filter(result => result.nombre.toLowerCase() === searchQuery.toLowerCase());\r\n  \r\n        if (matchedResults.length === 0) {\r\n          // Si no hay coincidencias exactas, busca en los resultados por otros nombres\r\n          const otherNamedResults = results.filter(result => result.otrosNombres.some(nombre => nombre.toLowerCase() === searchQuery.toLowerCase()));\r\n          setCosas(otherNamedResults);\r\n        } else {\r\n          setCosas(matchedResults);\r\n        }\r\n        addRecentSearch(searchQuery);\r\n        setLoadingCosas(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoadingCosas(false);\r\n        setTimeout(() => {\r\n\r\n        setError('No se han encontrado resultado');\r\n        }, 2000);\r\n        \r\n      }\r\n    }\r\n  };\r\n\r\n  const addRecentSearch = (searchQuery) => {\r\n    setBusquedasRecientes(prevBusquedas => [searchQuery, ...prevBusquedas.slice(0, 6)]);\r\n  };\r\n  \r\n\r\n \r\n\r\nreturn (\r\n  <div className={darkmode? \"contenedorBuscador-Dark\":'contenedorBuscador'}>\r\n    <div className='buscador'>\r\n      <form onSubmit={handleSubmit}>\r\n        <input placeholder='Introduce término a buscar' type=\"text\" value={query} onChange={handleChange} />\r\n        <button className='botonBuscar' type=\"submit\">Buscar</button>\r\n      </form>\r\n    </div>\r\n    {cosas.length > 0 ? (\r\n      cosas.map((result) => (\r\n        <div className={darkmode? \"resultados-Dark\":'resultados'} key={result.id}>\r\n          <h1>{result.nombre}</h1>\r\n          <h2>están en {result.nombreCasa}</h2>\r\n          {result.nombreHabitacion && <h2>en la habitación {result.nombreHabitacion}</h2>}\r\n          {result.nombreArmario && <h2>en el mueble {result.nombreArmario}</h2>}\r\n          {result.nombreCajon && <h2>en el cajón {result.nombreCajon}</h2>}\r\n          \r\n        </div>\r\n      ))\r\n    ) : (\r\n      <div className=\"error-message\">{error}</div>\r\n    )}\r\n    {busquedasRecientes.length > 0 && (\r\n      <div className=\"recientes\">\r\n        <h3>Búsquedas recientes:</h3>\r\n        <ul>\r\n          {busquedasRecientes.map((busqueda, index) => (\r\n            <li key={index}>\r\n              <button onClick={() => handleRecentSearch(busqueda)}>\r\n                {busqueda}\r\n                \r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n          };\r\n\r\n\r\nexport default Buscador;\r\n","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\pages\\Home.jsx",["117","118"],[],"C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\ModificarPass.jsx",["119"],[],"import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport emailJS from \"emailjs-com\";\r\n\r\n\r\nconst ModificarPass = () => {\r\n  const [showVerificationInput, setShowVerificationInput] = useState(false);\r\n  const navegar = useNavigate();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const [codigo, setCodigo] = useState(null);\r\n\r\n  const enviarCodigo = async (data) => {\r\n    setShowVerificationInput(true);\r\n    const codigoAleatorio = Math.floor(Math.random() * 100000);\r\n    const mensaje = `Su código de verificación es ${codigoAleatorio}`;\r\n    // console.log(mensaje);\r\n    setCodigo(codigoAleatorio);\r\n    const templateParams = {\r\n      nombre: data.nombre,\r\n      email: data.email,\r\n      message: mensaje,\r\n    };\r\n    // console.log(mensaje);\r\n\r\n    try {\r\n      const result = await emailJS.send(\r\n        \"service_sonionh\",\r\n        \"template_ju37jhy\",\r\n        templateParams,\r\n        \"BjAUYemuslYd41-PL\"\r\n      );\r\n      console.log(result.text);\r\n      alert(\"Mensaje enviado correctamente\");\r\n    } catch (error) {\r\n      console.log(error.text);\r\n      alert(\"Error al enviar el mensaje\");\r\n      return;\r\n    }\r\n  };\r\n\r\n  const gestorFormulario = async (data) => {\r\n    try {\r\n      const response = await axios.patch(\r\n        process.env.REACT_APP_API_URL + \"/api/usuarios/password\",\r\n        {\r\n          email: data.email,\r\n          password: data.password,\r\n        }\r\n      );\r\n      alert(\"Contraseña modificada exitosamente\", response.data);\r\n      navegar(\"/\");\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      console.log(\"Algo falló\");\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data) => {};\r\n\r\n  return (\r\n    <div className=\"formpass\">\r\n      <div className=\"title\">\r\n        <h2>Modificar contraseña</h2>\r\n      </div>\r\n      <br />\r\n      <form onSubmit={handleSubmit(gestorFormulario)}>\r\n        <div className=\"user-details\">\r\n          <div className=\"input-box\">\r\n            <span className=\"details\"></span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              {...register(\"email\", {\r\n                pattern: /^[^@]+@[^@]+\\.[^@]+$/,\r\n                required: true,\r\n              })}\r\n            />\r\n            {errors.email && errors.email.type === \"required\" && (\r\n              <p>Campo requerido</p>\r\n            )}\r\n            {errors.email && errors.email.type === \"pattern\" && (\r\n              <p>Formato de email incorrecto</p>\r\n            )}\r\n          </div>\r\n          <div className=\"input-box\">\r\n            <span className=\"details\"></span>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Nueva Contraseña\"\r\n              {...register(\"password\", { required: true })}\r\n            />\r\n            {errors.password && errors.password.type === \"required\" && (\r\n              <p>Campo requerido</p>\r\n            )}\r\n          </div>\r\n          {showVerificationInput && (\r\n            <div className=\"input-box\">\r\n              <span className=\"details\">Código de verificación</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"codigo\"\r\n                placeholder=\"Código de verificación\"\r\n                {...register(\"codigo\", { required: true })}\r\n              />\r\n              {errors.codigo && errors.codigo.type === \"required\" && (\r\n                <p>Campo requerido</p>\r\n              )}\r\n              {codigo && codigo !== errors.codigo && <p>Código incorrecto</p>}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"button\">\r\n          {!showVerificationInput && (\r\n            <button\r\n              type=\"submit\"\r\n              value=\"Enviar código de verificación\"\r\n              onClick={handleSubmit(enviarCodigo)}\r\n            >\r\n              Enviar Código de Verificación\r\n            </button>\r\n          )}\r\n          {showVerificationInput && (\r\n            <button\r\n              type=\"submit\"\r\n              value=\"Modificar contraseña\"\r\n              onClick={handleSubmit(gestorFormulario)}\r\n            >\r\n              Modificar Contraseña\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModificarPass;\r\n","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\Registro.jsx",["120","121","122","123"],[],"import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport emailJS from \"emailjs-com\";\r\nimport \"./Registro.css\"\r\n\r\nconst Alta = () => {\r\n  const [showVerificationInput, setShowVerificationInput] = useState(false);\r\n  const navegar = useNavigate();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const [codigo, setCodigo] = useState(null);\r\n  const gestorFormulario = async (data) => {\r\n    try {\r\n      const response = await axios.post(\r\n        process.env.REACT_APP_API_URL + \"/api/usuarios/registro\",\r\n        {\r\n          nombre: data.nombre,\r\n          email: data.email,\r\n          password: data.password,\r\n        }\r\n      );\r\n      // console.log(\"Todo correcto\", response.data);\r\n      // navegar(\"/login\");\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      console.log(\"algo falló\");\r\n    }\r\n  };\r\n  const enviarCodigo = async (data) => {\r\n    setShowVerificationInput(true);\r\n    const codigoAleatorio = Math.floor(Math.random() * 100000);\r\n    const mensaje = `Su código de verificación es ${codigoAleatorio}`;\r\n    // console.log(mensaje);\r\n    setCodigo(codigoAleatorio);\r\n    const templateParams = {\r\n      nombre: data.nombre,\r\n      email: data.email,\r\n      message: mensaje,\r\n    };\r\n    // console.log(mensaje);\r\n\r\n    try {\r\n      const result = await emailJS.send(\r\n        \"service_sonionh\",\r\n        \"template_ju37jhy\",\r\n        templateParams,\r\n        \"BjAUYemuslYd41-PL\"\r\n      );\r\n      // console.log(result.text);\r\n      alert(\"Mensaje enviado correctamente\");\r\n    } catch (error) {\r\n      // console.log(error.text);\r\n      alert(\"Error al enviar el mensaje\");\r\n      return;\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data) => {};\r\n  return (\r\n    <div className=\"Form\">\r\n      <div className=\"title\">\r\n        <h1>Crear cuenta</h1>\r\n      </div>\r\n      <form onSubmit={handleSubmit(gestorFormulario)}>\r\n        <div className=\"user-details\">\r\n          <div className=\"input-box\">\r\n            <span className=\"details\"></span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"nombre\"\r\n              placeholder=\"Nombre\"\r\n              {...register(\"nombre\", { required: true })}\r\n            />\r\n            {errors.nombre && errors.nombre.type === \"required\" && (\r\n              <p>Campo requerido</p>\r\n            )}\r\n          </div>\r\n          <div className=\"input-box\">\r\n            <span className=\"details\"></span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              {...register(\"email\", {\r\n                pattern: /^[^@]+@[^@]+\\.[^@]+$/,\r\n                required: true,\r\n              })}\r\n            />\r\n            {errors.email && errors.email.type === \"required\" && (\r\n              <p>Campo requerido</p>\r\n            )}\r\n            {errors.email && errors.email.type === \"pattern\" && (\r\n              <p>Formato de email incorrecto</p>\r\n            )}\r\n          </div>\r\n          <div className=\"input-box\">\r\n            <span className=\"details\"></span>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Contraseña\"\r\n              {...register(\"password\", { required: true })}\r\n            />\r\n            {errors.password && errors.password.type === \"required\" && (\r\n              <p>Campo requerido</p>\r\n            )}\r\n          </div>\r\n          {showVerificationInput && (\r\n            <div className=\"input-box\">\r\n              <span className=\"details\">Código de verificación</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"codigo\"\r\n                placeholder=\"Código de verificación\"\r\n                {...register(\"codigo\", { required: true })}\r\n              />\r\n              {errors.codigo && errors.codigo.type === \"required\" && (\r\n                <p>Campo requerido</p>\r\n              )}\r\n              {codigo && codigo !== errors.codigo && <p>Código incorrecto</p>}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"button\">\r\n          {!showVerificationInput && (\r\n            <button\r\n              type=\"submit\"\r\n              value=\"Crear cuenta\"\r\n              onClick={handleSubmit(enviarCodigo)}\r\n            >\r\n              Crear Cuenta{\" \"}\r\n            </button>\r\n          )}\r\n          {showVerificationInput && (\r\n            <button\r\n              type=\"submit\"\r\n              value=\"Verificar\"\r\n              onClick={handleSubmit(gestorFormulario)}\r\n            >\r\n              {\" \"}\r\n              Verificar y crear\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alta;\r\n","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\Habitaciones.jsx",["124","125","126","127","128","129","130","131","132"],[],"C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\MisCasas.jsx",["133","134","135","136","137"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"react-modal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport Addcasa from \"./Addcasa\";\r\nimport \"./MisCasas.css\";\r\n\r\nconst MisCasas = ({ darkmode }) => {\r\n  const [casas, setCasas] = useState([]);\r\n  const [mostrar, setMostrar] = useState(true);\r\n  const [modalAbierto, setModalAbierto] = useState(false);\r\n  const [casaId, setCasaId] = useState(null);\r\n  const [isLoadingCasas, setIsLoadingCasas] = useState(true);\r\n  const [modalAgregar, setModalAgregar] = useState(false);\r\n\r\n  const abrirModalCasas = () => {\r\n    setModalAgregar(!setModalAgregar);\r\n  };\r\n\r\n  const mostrarModal = (id) => {\r\n    setCasaId(id);\r\n    setModalAbierto(true);\r\n  };\r\n\r\n  const cerrarModal = () => {\r\n    setModalAbierto(false);\r\n    setCasaId(null);\r\n  };\r\n\r\n  const mostrarBoton = () => {\r\n    setMostrar(!mostrar);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const { IsLoggedIn } = React.useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    getCasas();\r\n  }, []);\r\n\r\n  const extraerDatosDeUsuario = () => {\r\n    const datosRecuperar = JSON.parse(localStorage.getItem(\"datosUsuario\"));\r\n    if (datosRecuperar && datosRecuperar.token) {\r\n      return [datosRecuperar.token, datosRecuperar.userId];\r\n    } else {\r\n      navigate.push(\"/login\");\r\n    }\r\n  };\r\n  //*OBTENER CASAS\r\n  const getCasas = async () => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    try {\r\n      const response = await axios.get(\r\n        process.env.REACT_APP_API_URL + \"/api/casas/\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          params: {\r\n            userId: userId,\r\n            casaId: casas._id,\r\n          },\r\n        }\r\n      );\r\n      setCasas(response.data);\r\n      setIsLoadingCasas(false);\r\n    } catch (error) {}\r\n  };\r\n  //*ELIMINAR CASA\r\n  const eliminarCasa = (id) => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    axios\r\n      .delete(process.env.REACT_APP_API_URL + `/api/casas/borrar/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        data: {\r\n          userId: userId,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        window.location.reload();\r\n        console.log(id);\r\n        console.log(res.data);\r\n        cerrarModal();\r\n      })\r\n      .catch((error) => console.log(error));\r\n    // console.log(id);\r\n  };\r\n  const casasLength = casas.length;\r\n\r\n  const modalStyles = {\r\n    overlay: {\r\n      position: \"fixed\",\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: \"rgba(0, 0, 0, 0.75)\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    content: {\r\n      position: \"relative\",\r\n      boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.5)\",\r\n      borderRadius: \"4px\",\r\n      backgroundColor: \"#fff\",\r\n      padding: \"20px\",\r\n      maxWidth: \"500px\",\r\n      margin: \"0 auto\",\r\n    },\r\n    bodyOpen: {\r\n      overflow: \"hidden\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={darkmode ? \"miscasas-Dark\" : \"miscasas\"}>\r\n      <div className={darkmode ? \"imagenCasa-Dark\" : \"imagenCasa\"}></div>\r\n      <div className=\"casas\">\r\n        {isLoadingCasas ? (\r\n          <div className=\"arc\"></div>\r\n        ) : casasLength === 0 ? (\r\n          <>\r\n            <div className=\"agregarCasa\">\r\n              <h1>Agregue el primer nivel</h1>\r\n\r\n              <Addcasa />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <ul className=\"casasLista\">\r\n            {casas &&\r\n              casas.length > 0 &&\r\n              casas.map((casa) => (\r\n                <li key={casa._id}>\r\n                  <div className=\"misCasas\">\r\n                    <div className=\"casasExistentes\">\r\n                      <div className=\"CasaConcreta\">\r\n                        <h1>Nombre : {casa.direccion}</h1> <br />\r\n                        <h1>Ciudad : {casa.ciudad} </h1>\r\n                      </div>\r\n                      <div className=\"botones\">\r\n                        <div>\r\n                          <button\r\n                            className=\"eliminarCasa\"\r\n                            onClick={() => mostrarModal(casa._id)}></button>\r\n\r\n                          <Modal\r\n                            casaId={casaId}\r\n                            isOpen={modalAbierto}\r\n                            onClose={cerrarModal}\r\n                            onConfirm={eliminarCasa}\r\n                            style={modalStyles}>\r\n                            <h1>\r\n                              ¿Seguro que quieres eliminar la casa? Esta acción\r\n                              no se podrá revertir\r\n                            </h1>\r\n                            <button\r\n                              className=\"botonSi\"\r\n                              onClick={() => eliminarCasa(casaId)}>\r\n                              Sí\r\n                            </button>\r\n                            <button className=\"botonNo\" onClick={cerrarModal}>\r\n                              No\r\n                            </button>\r\n                          </Modal>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <br />\r\n                  </div>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MisCasas;\r\n","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\MisArmarios.jsx",["138","139","140","141","142"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Modal from \"react-modal\";\r\nimport \"./MisArmarios.css\";\r\n\r\nconst MisArmarios = ({ darkmode }) => {\r\n  //*CONST NECESARIAS PARA LA LÓGICA DEL COMPONENTE\r\n  const [armarios, setArmarios] = useState([]);\r\n  const [isLoadingHabitacion, setIsLoadingHabitacion] = useState(false);\r\n  const [habitacion, setHabitacion] = useState([]);\r\n  const [isLoadingCasas, setIsLoadingCasas] = useState(false);\r\n  const [casas, setCasas] = useState([]);\r\n  const { token, userId } = useContext(AuthContext);\r\n  const [slideIndex, setSlideIndex] = useState(0);\r\n  const [modalAbierto, setModalAbierto] = useState(false);\r\n  const [modalEliminar, setModalEliminar] = useState(false);\r\n  const [nombreArmario, setNombreArmario] = useState(\"\");\r\n\r\n  const cerrarModal = () => {\r\n    setModalAbierto(false);\r\n  };\r\n\r\n  const verElFormulario = (nombre) => {\r\n    setNombreArmario(nombre);\r\n    setModalEliminar(true);\r\n  };\r\n\r\n  //*USE EFECCT\r\n  useEffect(() => {\r\n    getArmarios();\r\n    obtenerHabitaciones();\r\n    obtenerCasas();\r\n  }, []);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  //*EXTRAER LOS DATOS DE LOS USUARIOS PARA HACER LA VERIFICACIÓN DE USUARIO\r\n  const extraerDatosDeUsuario = () => {\r\n    const datosRecuperar = JSON.parse(localStorage.getItem(\"datosUsuario\"));\r\n    if (datosRecuperar && datosRecuperar.token) {\r\n      return [datosRecuperar.token, datosRecuperar.userId];\r\n    }\r\n  };\r\n\r\n  //*OBTENER ARMARIOS\r\n  const getArmarios = async () => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    try {\r\n      const response = await axios.get(\r\n        process.env.REACT_APP_API_URL + \"/api/armarios/\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          params: {\r\n            userId: userId,\r\n            armarioId: armarios._id,\r\n          },\r\n        }\r\n      );\r\n      setArmarios(response.data);\r\n    } catch (error) {}\r\n  };\r\n  //*OBTENER CASAS\r\n  const obtenerCasas = async () => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    setIsLoadingCasas(true);\r\n    await axios\r\n      .get(process.env.REACT_APP_API_URL + `/api/casas`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        params: {\r\n          userId: userId,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        // console.log(\"Todo correcto\", response.data);\r\n        setCasas(response.data);\r\n        setIsLoadingCasas(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n        setIsLoadingCasas(false);\r\n      });\r\n  };\r\n  //*ELIMINAR ARMARIOS\r\n  const eliminarArmario = (nombre) => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    axios\r\n      .delete(\r\n        process.env.REACT_APP_API_URL + `/api/armarios/borrar/${nombre}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          data: {\r\n            userId: userId,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        // console.log(nombre);\r\n        console.log(res.data);\r\n        setArmarios(armarios.filter((h) => h.nombre !== nombre));\r\n        setModalEliminar(false);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  //*EDITAR ARMARIOS\r\n  const editarArmario = (nombre) => {\r\n    axios\r\n      .patch(process.env.REACT_APP_API_URL + `/api/armarios/editar/${nombre}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        data: {\r\n          userId: userId,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        window.location.reload();\r\n        console.log(nombre);\r\n        console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  //*CREAR ARMARIOS\r\n  const addArmarios = async (data) => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    axios\r\n      .post(\r\n        process.env.REACT_APP_API_URL + \"/api/armarios/nuevo\",\r\n        {\r\n          nombre: data.nombre,\r\n          casa: data.casa,\r\n          habitacion: data.habitacion,\r\n          usuario: userId,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => console.log(error + \" \" + userId));\r\n  };\r\n  //*VER HABITACIONES\r\n  const obtenerHabitaciones = async () => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    setIsLoadingHabitacion(true);\r\n    await axios\r\n      .get(process.env.REACT_APP_API_URL + \"/api/habitaciones\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        setHabitacion(response.data);\r\n        setIsLoadingHabitacion(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setIsLoadingHabitacion(false);\r\n      });\r\n  };\r\n  //*VER ARMARIOS AGRUPADOS POR HABITACIONES\r\n  const armariosGroupedByHabitacion = armarios.reduce((groups, armario) => {\r\n    const nombreHabitacion = armario.nombreHabitacion;\r\n    if (groups[nombreHabitacion]) {\r\n      groups[nombreHabitacion].push(armario);\r\n    } else {\r\n      groups[nombreHabitacion] = [armario];\r\n    }\r\n    return groups;\r\n  }, {});\r\n  //*ESTILO DE MODAL\r\n  const modalStyles = {\r\n    overlay: {\r\n      position: \"fixed\",\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: \"rgba(0, 0, 0, 0.75)\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      zIndex: 9999, // Asegúrate de que el valor del zIndex sea mayor que cualquier otro elemento en la página\r\n    },\r\n    content: {\r\n      position: \"absolute\",\r\n      boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.5)\",\r\n      borderRadius: \"4px\",\r\n      backgroundColor: \"#fff\",\r\n      padding: \"20px\",\r\n      maxWidth: \"500px\",\r\n      margin: \"0 auto\",\r\n      zIndex: 99999, // Asegúrate de que el valor del zIndex sea mayor que cualquier otro elemento en la página\r\n    },\r\n  };\r\n  const armariosLength = armarios.length;\r\n  return (\r\n    <div className={darkmode ? \"Armarios-Dark\" : \"Armarios\"}>\r\n      <div className=\"tituloArmarios\">\r\n        <h1 className=\"h1muebles\">Mis muebles</h1>\r\n        <button\r\n          className=\"agregarMueble\"\r\n          onClick={() => setModalAbierto(true)}></button>\r\n      </div>\r\n      <div className=\"listaArmarios\">\r\n        {Object.entries(armariosGroupedByHabitacion).map(\r\n          ([nombreHabitacion, armarios]) => (\r\n            <div\r\n              className={\r\n                darkmode ? \"armariosHabitacion-Dark\" : \"armariosHabitacion\"\r\n              }\r\n              key={nombreHabitacion}>\r\n              <h1 className=\"nombrehabitacion\">{nombreHabitacion}</h1>\r\n              {armarios.map((armario) => (\r\n                <div\r\n                  className={\r\n                    darkmode ? \"armarioConcreto-Dark\" : \"armarioConcreto\"\r\n                  }\r\n                  key={armario._id}>\r\n                  <h1>{armario.nombre}</h1>\r\n                  <button\r\n                    className=\"eliminarArmario\"\r\n                    onClick={() => verElFormulario(armario.nombre)}></button>\r\n                </div>\r\n              ))}\r\n              <Modal\r\n                className=\"modal\"\r\n                isOpen={modalEliminar}\r\n                isClose={cerrarModal}>\r\n                <h1>¿Estás seguro de que quieres eliminarlo?</h1>\r\n                <button onClick={() => eliminarArmario(nombreArmario)}>\r\n                  Sí\r\n                </button>\r\n                <button onClick={() => setModalEliminar(false)}>No</button>\r\n              </Modal>\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n      {armariosLength === 0 && <h1>No tiene armarios </h1>}\r\n      {/* //*CREAR ARMARIOS */}\r\n\r\n      <br />\r\n      <br />\r\n      <Modal style={modalStyles} className=\"modal\" isOpen={modalAbierto}>\r\n        <form action=\"\" onSubmit={handleSubmit(addArmarios)}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nombre del armario\"\r\n            {...register(\"nombre\", { required: true })}\r\n          />\r\n          {errors.nombre && <span>Este campo es obligatorio</span>}\r\n          <select {...register(\"casa\", { required: true })}>\r\n            {isLoadingCasas ? (\r\n              <option>Cargando...</option>\r\n            ) : (\r\n              casas.map((casa) => (\r\n                <option key={casa.id} value={casa.id}>\r\n                  {casa.nombre}\r\n                </option>\r\n              ))\r\n            )}\r\n          </select>\r\n          <select {...register(\"habitacion\", { required: true })}>\r\n            <option value=\"\">Seleccione una habitación</option>\r\n            {isLoadingHabitacion ? (\r\n              <option>Cargando...</option>\r\n            ) : (\r\n              habitacion.map((habitacion) => (\r\n                <option key={habitacion.id} value={habitacion.id}>\r\n                  {habitacion.nombre}\r\n                </option>\r\n              ))\r\n            )}\r\n          </select>\r\n\r\n          <button onClick={addArmarios}>Añadir armario</button>\r\n        </form>\r\n        <button onClick={() => setModalAbierto(false)}>Cerrar</button>\r\n      </Modal>\r\n\r\n      {/* //*MIS ARMARIOS */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MisArmarios;\r\n","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\Cajones.jsx",["143","144","145","146","147","148","149","150","151","152"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"react-modal\";\r\nimport \"./Cajones.css\";\r\n\r\nexport const Cajones = () => {\r\n  const [cajones, setCajones] = useState([]);\r\n  const [habitaciones, setHabitaciones] = useState([]);\r\n  const [armarios, setArmarios] = useState([]);\r\n  const [isLoadingCajones, setIsloadingCajojes] = useState(false);\r\n  const [isLoadingArmarios, setIsLoadingArmarios] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [selectedHabitacion, setSelectedHabitacion] = useState(\"\");\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const handleHabitacionChange = (event) => {\r\n    setSelectedHabitacion(event.target.value);\r\n  };\r\n\r\n  const abrirModal = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n  const cerrarModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  const filteredArmarios = armarios.filter(\r\n    (armario) =>\r\n      armario.nombreHabitacion === selectedHabitacion &&\r\n      armario.nombreArmario !== \"\"\r\n  );\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    obtenerCajones();\r\n    obtenerHabitaciones();\r\n    obtenerArmarios();\r\n  }, []);\r\n\r\n  const extraerDatosDeUsuario = () => {\r\n    const datosRecuperar = JSON.parse(localStorage.getItem(\"datosUsuario\"));\r\n    if (datosRecuperar && datosRecuperar.token) {\r\n      return [datosRecuperar.token, datosRecuperar.userId];\r\n    }\r\n  };\r\n\r\n  const obtenerCajones = async () => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    await axios\r\n      .get(process.env.REACT_APP_API_URL + \"/api/cajones\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setCajones(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const obtenerHabitaciones = async () => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    await axios\r\n      .get(process.env.REACT_APP_API_URL + \"/api/habitaciones\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setHabitaciones(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const obtenerArmarios = async () => {\r\n    setIsLoadingArmarios(true);\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    await axios\r\n      .get(process.env.REACT_APP_API_URL + \"/api/armarios\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setArmarios(response.data);\r\n        setIsLoadingArmarios(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setIsLoadingArmarios(false);\r\n      });\r\n  };\r\n\r\n  const gestorFormulario = async (data) => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    setIsloadingCajojes(true);\r\n    await axios\r\n      .post(\r\n        process.env.REACT_APP_API_URL + \"/api/cajones/nuevo\",\r\n        {\r\n          nombre: data.nombre,\r\n          habitacion: data.habitacion,\r\n          armario: data.armario,\r\n          cosas: [data.cosas],\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setCajones(response.data);\r\n        setIsloadingCajojes(true);\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        setIsloadingCajojes(false);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const eliminarCajon = (nombre) => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    axios\r\n      .delete(\r\n        process.env.REACT_APP_API_URL + `/api/cajones/eliminar/${nombre}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        // window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // Agrupar los armarios por habitación\r\n  const armariosPorHabitacion = armarios.reduce((groups, armario) => {\r\n    const nombreHabitacion = armario.nombreHabitacion;\r\n    if (groups[nombreHabitacion]) {\r\n      groups[nombreHabitacion].push(armario);\r\n    } else {\r\n      groups[nombreHabitacion] = [armario];\r\n    }\r\n    return groups;\r\n  }, {});\r\n\r\n  return (\r\n    <div>\r\n      <h1>Cajones</h1>\r\n      <div className=\"cajones\">\r\n        {Object.entries(armariosPorHabitacion).map(\r\n          ([nombreHabitacion, armariosHabitacion]) => (\r\n            <div key={nombreHabitacion} className=\"habitacion\">\r\n              <h2>{nombreHabitacion}</h2>\r\n              <div className=\"armarios\">\r\n                {armariosHabitacion.map((armario) => (\r\n                  <div key={armario._id} className=\"armario\">\r\n                    <h3>{armario.nombre}</h3>\r\n                    <div className=\"cajones\">\r\n                      {cajones\r\n                        .filter((cajon) => cajon.armario === armario._id)\r\n                        .map((cajon) => (\r\n                          <div key={cajon._id} className=\"cajon\">\r\n                            <h4>{cajon.nombre}</h4>\r\n                            <button\r\n                              className=\"eliminarCajon\"\r\n                              onClick={() =>\r\n                                eliminarCajon(cajon.nombre)\r\n                              }></button>\r\n                            <button onClick={abrirModal}></button>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n      <Modal isOpen={modalIsOpen} contentLabel=\"Example Modal\">\r\n        <div className=\"cajones-form\">\r\n          <form onSubmit={handleSubmit(gestorFormulario)}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Nombre\"\r\n              {...register(\"nombre\", { required: true })}\r\n            />\r\n            <select\r\n              {...register(\"habitacion\", { required: true })}\r\n              onChange={handleHabitacionChange}>\r\n              <option value=\"\">Seleccione una habitación</option>\r\n              {habitaciones.map((habitacion) => (\r\n                <option key={habitacion.id} value={habitacion.id}>\r\n                  {habitacion.nombre}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <select {...register(\"armario\", { required: true })}>\r\n              <option value=\"\">Seleccione un armario</option>\r\n              {isLoadingArmarios ? (\r\n                <option>Loading...</option>\r\n              ) : (\r\n                filteredArmarios.map((armario) => (\r\n                  <option key={armario.id} value={armario.id}>\r\n                    {armario.nombre}\r\n                  </option>\r\n                ))\r\n              )}\r\n            </select>\r\n            <button type=\"submit\">Guardar</button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cajones;\r\n","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\Cosas.jsx",["153","154","155","156","157","158","159","160","161","162","163","164"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Modal from \"react-modal\";\r\nimport \"./Cosas.css\";\r\n\r\nconst Cosas = ({ darkmode }) => {\r\n  const [cosas, setCosas] = useState([]);\r\n  const [isLoadingCosas, setLoadingCosas] = useState(false);\r\n  const [isLoadingArmarios, setIsLoadingArmarios] = useState(false);\r\n  const [isLoadingCajones, setIsLoadingCajones] = useState(false);\r\n  const [habitaciones, setHabitaciones] = useState([]);\r\n  const [shouldReload, setShouldReload] = useState(false); // variable para determinar si se debe recargar la lista de cosas\r\n  const navigate = useNavigate();\r\n  const [armarios, setArmarios] = useState([]);\r\n  const [selectedHabitacion, setSelectedHabitacion] = useState(\"\");\r\n  const [selectedArmario, setSelectedArmario] = useState(\"\");\r\n  const [isLoadingCasas, setIsLoadingCasas] = useState(false);\r\n  const [casas, setCasas] = useState([]);\r\n  const [cajones, setCajones] = useState([]);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [modalIsOpen2, setModalIsOpen2] = useState(false);\r\n\r\n  const abrirModal = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n  const cerrarModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n  const abrirModal2 = () => {\r\n    setModalIsOpen2(true);\r\n  };\r\n  const cerrarModal2 = () => {\r\n    setModalIsOpen2(false);\r\n  };\r\n  const handleHabitacionChange = (event) => {\r\n    setSelectedHabitacion(event.target.value);\r\n  };\r\n  const handleArmarioChange = (event) => {\r\n    setSelectedArmario(event.target.value);\r\n  };\r\n\r\n  const filteredArmarios = armarios.filter(\r\n    (armario) =>\r\n      armario.nombreHabitacion === selectedHabitacion &&\r\n      armario.nombreArmario !== \"\"\r\n  );\r\n  const filteredCajones = cajones.filter(\r\n    (cajon) =>\r\n      cajon.nombreArmario === selectedArmario && cajon.nombreCajon !== \"\"\r\n  );\r\n  const modalStyles = {\r\n    overlay: {\r\n      position: \"fixed\",\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: \"rgba(0, 0, 0, 0.75)\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      zIndex: 9999, // Asegúrate de que el valor del zIndex sea mayor que cualquier otro elemento en la página\r\n    },\r\n    content: {\r\n      backgroundColor: \"white\",\r\n      position: \"absolute\",\r\n      boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.5)\",\r\n      borderRadius: \"4px\",\r\n      padding: \"20px\",\r\n      maxWidth: \"50vw\",\r\n      margin: \"0 auto\",\r\n      zIndex: 99999, // Asegúrate de que el valor del zIndex sea mayor que cualquier otro elemento en la página\r\n    },\r\n    button: {\r\n      color: \"Black\",\r\n      marginTop: \"10px\",\r\n      padding: \"8px 16px\",\r\n      backgroundColor: \"blue\",\r\n      borderRadius: \"4px\",\r\n      border: \"none\",\r\n      cursor: \"pointer\",\r\n      zIndex: 99999, // Asegúrate de que el valor del zIndex sea mayor que cualquier otro elemento en la página\r\n    },\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  //*AÑADIR COSAS\r\n  const gestorFormulario = async (data) => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    setLoadingCosas(true);\r\n    await axios\r\n      .post(\r\n        process.env.REACT_APP_API_URL + \"/api/cosas/nuevo\",\r\n        {\r\n          nombre: data.nombre,\r\n          descripcion: data.descripcion,\r\n          clasificacion: data.clasificacion,\r\n          cajon: data.cajon,\r\n          armario: data.armario,\r\n          habitacion: data.habitacion,\r\n          casa: data.casa,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(data.cajon);\r\n        console.log(res.data);\r\n        setLoadingCosas(false);\r\n        setShouldReload(true); // actualizar la variable para que se recargue la lista de cosas\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoadingCosas(false);\r\n      });\r\n  };\r\n\r\n  const extraerDatosDeUsuario = () => {\r\n    const datosRecuperar = JSON.parse(localStorage.getItem(\"datosUsuario\"));\r\n    if (datosRecuperar && datosRecuperar.token) {\r\n      return [datosRecuperar.token, datosRecuperar.userId];\r\n    } else {\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n  //*VER COSAS\r\n  const verCosas = async () => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    try {\r\n      const response = await axios.get(\r\n        process.env.REACT_APP_API_URL + \"/api/cosas\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setCosas(response.data);\r\n      console.log(cosas);\r\n      setLoadingCosas(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoadingCosas(false);\r\n    }\r\n  };\r\n\r\n  //*ELIMINAR COSAS\r\n  const eliminarCosas = async (nombre) => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n\r\n    try {\r\n      await axios.delete(\r\n        process.env.REACT_APP_API_URL + \"/api/cosas/borrar/\" + nombre,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      // console.log(response);\r\n      setLoadingCosas(true);\r\n      setShouldReload(true); // actualizar la variable para que se recargue la lista de cosas\r\n      setLoadingCosas(false);\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoadingCosas(false);\r\n    }\r\n  };\r\n\r\n  //*------------------------MODIFICAR COSAS------------------------//\r\n\r\n  const modificarCosas = async (data) => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    setLoadingCosas(true);\r\n    await axios\r\n      .patch(\r\n        process.env.REACT_APP_API_URL + \"/api/cosas/editar/\" + data.nombre,\r\n        {\r\n          descripcion: data.descripcion,\r\n          clasificacion: data.clasificacion,\r\n          cajon: data.cajon ? data.cajon : null,\r\n          armario: data.armario ? data.armario : null,\r\n          habitacion: data.habitacion ? data.habitacion : null,\r\n          casa: data.casa,\r\n          nombreHabitacion: data.nombreHabitacion\r\n            ? data.nombreHabitacion\r\n            : null,\r\n          nombreArmario: data.nombreArmario ? data.nombreArmario : null,\r\n          nombreCajon: data.nombreCajon ? data.nombreCajon : null,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(data.cajon);\r\n        console.log(res.data);\r\n        setLoadingCosas(false);\r\n        setShouldReload(true); // actualizar la variable para que se recargue la lista de cosas\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoadingCosas(false);\r\n      });\r\n  };\r\n\r\n  //*OBTENER HABITACIONES\r\n\r\n  const obtenerHabitaciones = async () => {\r\n    setIsLoadingArmarios(true);\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    try {\r\n      const response = await axios.get(\r\n        process.env.REACT_APP_API_URL + \"/api/habitaciones\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          params: {\r\n            userId: userId,\r\n          },\r\n        }\r\n      );\r\n      console.log(response);\r\n      setHabitaciones(response.data);\r\n      setIsLoadingArmarios(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setIsLoadingArmarios(false);\r\n    }\r\n  };\r\n  //*OBTENER CASAS\r\n  const obtenerCasas = async () => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    setIsLoadingCasas(true);\r\n    await axios\r\n      .get(process.env.REACT_APP_API_URL + `/api/casas`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        params: {\r\n          userId: userId,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        // console.log(\"Todo correcto\", response.data);\r\n        setCasas(response.data);\r\n        setIsLoadingCasas(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n        setIsLoadingCasas(false);\r\n      });\r\n  };\r\n  //* VER ARMARIOS\r\n  const obtenerArmarios = async () => {\r\n    setIsLoadingArmarios(true);\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    await axios\r\n      .get(process.env.REACT_APP_API_URL + \"/api/armarios\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setArmarios(response.data);\r\n        setIsLoadingArmarios(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setIsLoadingArmarios(false);\r\n      });\r\n  };\r\n\r\n  //*VER CAJONES\r\n  const obtenerCajones = async () => {\r\n    const [token, userId] = extraerDatosDeUsuario();\r\n    await axios\r\n      .get(process.env.REACT_APP_API_URL + \"/api/cajones\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setIsLoadingCajones(false);\r\n        setCajones(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setIsLoadingCajones(false);\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    obtenerCajones();\r\n    obtenerArmarios();\r\n    obtenerCasas();\r\n    obtenerHabitaciones();\r\n    verCosas();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* VER LAS COSAS  */}\r\n      <div>\r\n        {/* VER LAS COSAS  */}\r\n        <div className=\"cosas\">\r\n          <h2 className=\"h2cosas\">Cosas</h2>\r\n          <div className=\"listaCosas\">\r\n            {cosas.map((cosa, index) => {\r\n              return (\r\n                <div key={cosa._id} className=\"cosaConcreta\">\r\n                  <h2>{cosa.nombre}</h2>\r\n                  <button>Editar</button>\r\n                  <h3>{cosa.nombreHabitacion}</h3>\r\n                  <h3>{cosa.nombreArmario}</h3>\r\n                  <h3>{cosa.nombreCajon}</h3>\r\n                  <button onClick={() => eliminarCosas(cosa.nombre)}>\r\n                    Eliminar\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* AÑADIR COSAS  */}\r\n      <h1>Cosas</h1>\r\n      <button onClick={abrirModal}>Agregar Cosas</button>\r\n      <Modal isOpen={modalIsOpen}>\r\n        <form action=\"\" onSubmit={handleSubmit(gestorFormulario)}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"NombreCosa\"\r\n            {...register(\"nombre\", { required: true })}\r\n          />\r\n          <select\r\n            {...register(\"descripcion\", { required: true })}\r\n            name=\"descripcion\">\r\n            <option value=\"\">Selecciona una descripción</option>\r\n            <option value=\"Electronica\">Electronica</option>\r\n            <option value=\"Personal\">Personal</option>\r\n            <option value=\"Hogar\">Hogar</option>\r\n            <option value=\"Oficina\">Oficina</option>\r\n            <option value=\"Deporte\">Deporte</option>\r\n            <option value=\"Mascotas\">Mascotas</option>\r\n            <option value=\"Herramienta\">Herramienta</option>\r\n            <option value=\"Escolar\">Escolar</option>\r\n            <option value=\"Informática\">Informática</option>\r\n            <option value=\"Cocina\">Cocina</option>\r\n            <option value=\"Ropa\">Ropa</option>\r\n            <option value=\"Jueguetes\">Juguetes</option>\r\n            <option value=\"Salun y bienestar\">Salud y Bienestar</option>\r\n            <option value=\"Jardineria\">Jardineria</option>\r\n            <option value=\"Cine y peliculas\">Cine y Peliculas</option>\r\n            <option value=\"Arte y manualidades\">Arte y manualidades</option>\r\n            <option value=\"Libros\">Libros</option>\r\n            <option value=\"Comics, manga y novela gráfica\">\r\n              Comics, manga y novela gráfica\r\n            </option>\r\n          </select>\r\n          <select\r\n            {...register(\"clasificacion\", { required: true })}\r\n            name=\"clasificacion\">\r\n            <option value=\"\">Selecciona una clasificación</option>\r\n            <option value=\"Importante\">Importante</option>\r\n            <option value=\"Imprescindible\">Imprescindible</option>\r\n            <option value=\"Normal\">Normal</option>\r\n          </select>\r\n          <select {...register(\"casa\", { required: true })}>\r\n            {isLoadingCasas ? (\r\n              <option>Cargando...</option>\r\n            ) : (\r\n              casas.map((casa) => (\r\n                <option key={casa.id} value={casa.id}>\r\n                  {casa.nombre}\r\n                </option>\r\n              ))\r\n            )}\r\n          </select>\r\n          <select\r\n            {...register(\"habitacion\", { required: false })}\r\n            onChange={handleHabitacionChange}>\r\n            <option value=\"\">Seleccione una habitación</option>\r\n            {habitaciones.map((habitacion) => (\r\n              <option key={habitacion._id} value={habitacion.nombre}>\r\n                {habitacion.nombre}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            {...register(\"armario\", { required: false })}\r\n            onChange={handleArmarioChange}>\r\n            <option value=\"\">Seleccione un armario</option>\r\n            {isLoadingArmarios ? (\r\n              <option>Loading...</option>\r\n            ) : (\r\n              filteredArmarios.map((armario) => (\r\n                <option key={armario.id} value={armario.id}>\r\n                  {armario.nombre}\r\n                </option>\r\n              ))\r\n            )}\r\n          </select>\r\n          <select {...register(\"cajon\", { required: false })}>\r\n            <option value=\"\">Seleccione cajón</option>\r\n            {isLoadingCajones ? (\r\n              <option>Loading...</option>\r\n            ) : (\r\n              filteredCajones.map((cajon) => (\r\n                <option key={cajon.id} value={cajon.id}>\r\n                  {cajon.nombre}\r\n                </option>\r\n              ))\r\n            )}\r\n          </select>\r\n          <button>Añadir</button>\r\n          <button onClick={cerrarModal}>Cerrar</button>\r\n        </form>\r\n      </Modal>\r\n      {/* MODIFICAR COSA */}\r\n      <Modal style={modalStyles} isOpen={modalIsOpen2}>\r\n        <form action=\"\" onSubmit={handleSubmit(modificarCosas)}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nombre\"\r\n            {...register(\"nombre\", { required: true })}\r\n          />\r\n\r\n          <br />\r\n          <select\r\n            {...register(\"descripcion\", { required: true })}\r\n            name=\"descripcion\">\r\n            <option value=\"\">Selecciona una descripción</option>\r\n            <option value=\"Electronica\">Electronica</option>\r\n            <option value=\"Personal\">Personal</option>\r\n            <option value=\"Hogar\">Hogar</option>\r\n            <option value=\"Oficina\">Oficina</option>\r\n            <option value=\"Deporte\">Deporte</option>\r\n            <option value=\"Mascotas\">Mascotas</option>\r\n            <option value=\"Herramienta\">Herramienta</option>\r\n            <option value=\"Escolar\">Escolar</option>\r\n            <option value=\"Informática\">Informática</option>\r\n            <option value=\"Cocina\">Cocina</option>\r\n            <option value=\"Ropa\">Ropa</option>\r\n            <option value=\"Jueguetes\">Juguetes</option>\r\n            <option value=\"Salun y bienestar\">Salud y Bienestar</option>\r\n            <option value=\"Jardineria\">Jardineria</option>\r\n            <option value=\"Cine y peliculas\">Cine y Peliculas</option>\r\n            <option value=\"Arte y manualidades\">Arte y manualidades</option>\r\n            <option value=\"Libros\">Libros</option>\r\n            <option value=\"Comics, manga y novela gráfica\">\r\n              Comics, manga y novela gráfica\r\n            </option>\r\n          </select>\r\n          <select\r\n            {...register(\"clasificacion\", { required: true })}\r\n            name=\"clasificacion\">\r\n            <option value=\"\">Selecciona una clasificación</option>\r\n            <option value=\"Importante\">Importante</option>\r\n            <option value=\"Imprescindible\">Imprescindible</option>\r\n            <option value=\"Normal\">Normal</option>\r\n          </select>\r\n          <select {...register(\"casa\", { required: true })}>\r\n            {isLoadingCasas ? (\r\n              <option>Cargando...</option>\r\n            ) : (\r\n              casas.map((casa) => (\r\n                <option key={casa.id} value={casa.id}>\r\n                  {casa.nombre}\r\n                </option>\r\n              ))\r\n            )}\r\n          </select>\r\n          <select\r\n            {...register(\"habitacion\", { required: false })}\r\n            onChange={handleHabitacionChange}>\r\n            <option value=\"\">Seleccione una habitación</option>\r\n            {habitaciones.map((habitacion) => (\r\n              <option key={habitacion._id} value={habitacion.nombre}>\r\n                {habitacion.nombre}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            {...register(\"armario\", { required: false })}\r\n            onChange={handleArmarioChange}>\r\n            <option value=\"\">Seleccione un armario</option>\r\n            {isLoadingArmarios ? (\r\n              <option>Loading...</option>\r\n            ) : (\r\n              filteredArmarios.map((armario) => (\r\n                <option key={armario.id} value={armario.id}>\r\n                  {armario.nombre}\r\n                </option>\r\n              ))\r\n            )}\r\n          </select>\r\n          <select {...register(\"cajon\", { required: false })}>\r\n            <option value=\"\">Seleccione cajón</option>\r\n            {isLoadingCajones ? (\r\n              <option>Loading...</option>\r\n            ) : (\r\n              filteredCajones.map((cajon) => (\r\n                <option key={cajon.id} value={cajon.id}>\r\n                  {cajon.nombre}\r\n                </option>\r\n              ))\r\n            )}\r\n          </select>\r\n\r\n          <button>Modificar</button>\r\n          <button onClick={cerrarModal2}>Cerrar</button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cosas;\r\n","C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\Addhab.jsx",["165","166","167","168","169","170"],[],"C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\Addcasa.jsx",[],[],"C:\\Users\\gabri\\Documents\\ProyectoFinal\\FrontEndDondeEsta\\frontend\\src\\components\\ConfirmacionModalHabitacion.jsx",[],[],{"ruleId":"171","severity":1,"message":"172","line":7,"column":8,"nodeType":"173","messageId":"174","endLine":7,"endColumn":16},{"ruleId":"171","severity":1,"message":"175","line":11,"column":10,"nodeType":"173","messageId":"174","endLine":11,"endColumn":15},{"ruleId":"171","severity":1,"message":"176","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":14},{"ruleId":"171","severity":1,"message":"172","line":8,"column":8,"nodeType":"173","messageId":"174","endLine":8,"endColumn":16},{"ruleId":"177","severity":1,"message":"178","line":50,"column":6,"nodeType":"179","endLine":50,"endColumn":16,"suggestions":"180"},{"ruleId":"177","severity":1,"message":"181","line":266,"column":6,"nodeType":"179","endLine":266,"endColumn":18,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":437,"column":17,"nodeType":"185","endLine":437,"endColumn":58},{"ruleId":"183","severity":1,"message":"184","line":442,"column":17,"nodeType":"185","endLine":442,"endColumn":63},{"ruleId":"183","severity":1,"message":"184","line":449,"column":17,"nodeType":"185","endLine":449,"endColumn":61},{"ruleId":"183","severity":1,"message":"184","line":454,"column":17,"nodeType":"185","endLine":454,"endColumn":60},{"ruleId":"183","severity":1,"message":"184","line":459,"column":17,"nodeType":"185","endLine":459,"endColumn":58},{"ruleId":"183","severity":1,"message":"186","line":474,"column":15,"nodeType":"185","endLine":474,"endColumn":51},{"ruleId":"183","severity":1,"message":"186","line":479,"column":15,"nodeType":"185","endLine":479,"endColumn":54},{"ruleId":"171","severity":1,"message":"187","line":5,"column":10,"nodeType":"173","messageId":"174","endLine":5,"endColumn":14},{"ruleId":"171","severity":1,"message":"188","line":18,"column":20,"nodeType":"173","messageId":"174","endLine":18,"endColumn":31},{"ruleId":"171","severity":1,"message":"189","line":1,"column":27,"nodeType":"173","messageId":"174","endLine":1,"endColumn":37},{"ruleId":"171","severity":1,"message":"190","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":21},{"ruleId":"171","severity":1,"message":"191","line":10,"column":10,"nodeType":"173","messageId":"174","endLine":10,"endColumn":22},{"ruleId":"171","severity":1,"message":"192","line":49,"column":21,"nodeType":"173","messageId":"174","endLine":49,"endColumn":27},{"ruleId":"171","severity":1,"message":"193","line":26,"column":10,"nodeType":"173","messageId":"174","endLine":26,"endColumn":15},{"ruleId":"177","severity":1,"message":"194","line":39,"column":6,"nodeType":"179","endLine":39,"endColumn":8,"suggestions":"195"},{"ruleId":"171","severity":1,"message":"196","line":64,"column":9,"nodeType":"173","messageId":"174","endLine":64,"endColumn":17},{"ruleId":"171","severity":1,"message":"197","line":10,"column":9,"nodeType":"173","messageId":"174","endLine":10,"endColumn":16},{"ruleId":"171","severity":1,"message":"198","line":19,"column":13,"nodeType":"173","messageId":"174","endLine":19,"endColumn":21},{"ruleId":"171","severity":1,"message":"199","line":48,"column":13,"nodeType":"173","messageId":"174","endLine":48,"endColumn":19},{"ruleId":"171","severity":1,"message":"196","line":63,"column":9,"nodeType":"173","messageId":"174","endLine":63,"endColumn":17},{"ruleId":"171","severity":1,"message":"200","line":2,"column":38,"nodeType":"173","messageId":"174","endLine":2,"endColumn":44},{"ruleId":"171","severity":1,"message":"201","line":14,"column":10,"nodeType":"173","messageId":"174","endLine":14,"endColumn":31},{"ruleId":"171","severity":1,"message":"202","line":16,"column":10,"nodeType":"173","messageId":"174","endLine":16,"endColumn":20},{"ruleId":"171","severity":1,"message":"203","line":16,"column":22,"nodeType":"173","messageId":"174","endLine":16,"endColumn":35},{"ruleId":"171","severity":1,"message":"204","line":42,"column":5,"nodeType":"173","messageId":"174","endLine":42,"endColumn":13},{"ruleId":"171","severity":1,"message":"205","line":43,"column":5,"nodeType":"173","messageId":"174","endLine":43,"endColumn":17},{"ruleId":"171","severity":1,"message":"206","line":44,"column":18,"nodeType":"173","messageId":"174","endLine":44,"endColumn":24},{"ruleId":"177","severity":1,"message":"207","line":50,"column":6,"nodeType":"179","endLine":50,"endColumn":8,"suggestions":"208"},{"ruleId":"171","severity":1,"message":"192","line":64,"column":19,"nodeType":"173","messageId":"174","endLine":64,"endColumn":25},{"ruleId":"171","severity":1,"message":"209","line":15,"column":10,"nodeType":"173","messageId":"174","endLine":15,"endColumn":22},{"ruleId":"171","severity":1,"message":"210","line":17,"column":9,"nodeType":"173","messageId":"174","endLine":17,"endColumn":24},{"ruleId":"171","severity":1,"message":"211","line":31,"column":9,"nodeType":"173","messageId":"174","endLine":31,"endColumn":21},{"ruleId":"171","severity":1,"message":"212","line":36,"column":11,"nodeType":"173","messageId":"174","endLine":36,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":40,"column":6,"nodeType":"179","endLine":40,"endColumn":8,"suggestions":"213"},{"ruleId":"171","severity":1,"message":"202","line":16,"column":10,"nodeType":"173","messageId":"174","endLine":16,"endColumn":20},{"ruleId":"171","severity":1,"message":"203","line":16,"column":22,"nodeType":"173","messageId":"174","endLine":16,"endColumn":35},{"ruleId":"177","severity":1,"message":"214","line":35,"column":6,"nodeType":"179","endLine":35,"endColumn":8,"suggestions":"215"},{"ruleId":"171","severity":1,"message":"216","line":115,"column":9,"nodeType":"173","messageId":"174","endLine":115,"endColumn":22},{"ruleId":"171","severity":1,"message":"192","line":157,"column":19,"nodeType":"173","messageId":"174","endLine":157,"endColumn":25},{"ruleId":"171","severity":1,"message":"217","line":13,"column":10,"nodeType":"173","messageId":"174","endLine":13,"endColumn":26},{"ruleId":"171","severity":1,"message":"218","line":15,"column":9,"nodeType":"173","messageId":"174","endLine":15,"endColumn":17},{"ruleId":"171","severity":1,"message":"219","line":25,"column":9,"nodeType":"173","messageId":"174","endLine":25,"endColumn":20},{"ruleId":"171","severity":1,"message":"206","line":37,"column":18,"nodeType":"173","messageId":"174","endLine":37,"endColumn":24},{"ruleId":"177","severity":1,"message":"220","line":44,"column":6,"nodeType":"179","endLine":44,"endColumn":8,"suggestions":"221"},{"ruleId":"171","severity":1,"message":"192","line":54,"column":19,"nodeType":"173","messageId":"174","endLine":54,"endColumn":25},{"ruleId":"171","severity":1,"message":"192","line":70,"column":19,"nodeType":"173","messageId":"174","endLine":70,"endColumn":25},{"ruleId":"171","severity":1,"message":"192","line":87,"column":19,"nodeType":"173","messageId":"174","endLine":87,"endColumn":25},{"ruleId":"171","severity":1,"message":"192","line":105,"column":19,"nodeType":"173","messageId":"174","endLine":105,"endColumn":25},{"ruleId":"171","severity":1,"message":"192","line":134,"column":19,"nodeType":"173","messageId":"174","endLine":134,"endColumn":25},{"ruleId":"171","severity":1,"message":"190","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":21},{"ruleId":"171","severity":1,"message":"222","line":11,"column":10,"nodeType":"173","messageId":"174","endLine":11,"endColumn":24},{"ruleId":"171","severity":1,"message":"223","line":15,"column":10,"nodeType":"173","messageId":"174","endLine":15,"endColumn":22},{"ruleId":"171","severity":1,"message":"224","line":32,"column":9,"nodeType":"173","messageId":"174","endLine":32,"endColumn":20},{"ruleId":"171","severity":1,"message":"206","line":92,"column":18,"nodeType":"173","messageId":"174","endLine":92,"endColumn":24},{"ruleId":"171","severity":1,"message":"192","line":96,"column":19,"nodeType":"173","messageId":"174","endLine":96,"endColumn":25},{"ruleId":"171","severity":1,"message":"192","line":139,"column":19,"nodeType":"173","messageId":"174","endLine":139,"endColumn":25},{"ruleId":"171","severity":1,"message":"192","line":160,"column":19,"nodeType":"173","messageId":"174","endLine":160,"endColumn":25},{"ruleId":"171","severity":1,"message":"192","line":185,"column":19,"nodeType":"173","messageId":"174","endLine":185,"endColumn":25},{"ruleId":"171","severity":1,"message":"192","line":273,"column":19,"nodeType":"173","messageId":"174","endLine":273,"endColumn":25},{"ruleId":"171","severity":1,"message":"192","line":292,"column":19,"nodeType":"173","messageId":"174","endLine":292,"endColumn":25},{"ruleId":"177","severity":1,"message":"225","line":314,"column":6,"nodeType":"179","endLine":314,"endColumn":8,"suggestions":"226"},{"ruleId":"171","severity":1,"message":"227","line":13,"column":10,"nodeType":"173","messageId":"174","endLine":13,"endColumn":31},{"ruleId":"171","severity":1,"message":"228","line":17,"column":10,"nodeType":"173","messageId":"174","endLine":17,"endColumn":15},{"ruleId":"171","severity":1,"message":"192","line":26,"column":19,"nodeType":"173","messageId":"174","endLine":26,"endColumn":25},{"ruleId":"177","severity":1,"message":"229","line":50,"column":6,"nodeType":"179","endLine":50,"endColumn":50,"suggestions":"230"},{"ruleId":"177","severity":1,"message":"231","line":55,"column":6,"nodeType":"179","endLine":55,"endColumn":8,"suggestions":"232"},{"ruleId":"171","severity":1,"message":"192","line":109,"column":19,"nodeType":"173","messageId":"174","endLine":109,"endColumn":25},"no-unused-vars","'Buscador' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCasas'. Either include it or remove the dependency array.","ArrayExpression",["233"],"React Hook useEffect has missing dependencies: 'getCasas', 'getHabitaciones', and 'verUsuario'. Either include them or remove the dependency array.",["234"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'send' is defined but never used.","'setDarkmode' is assigned a value but never used.","'useContext' is defined but never used.","'AuthContext' is defined but never used.","'loadingCosas' is assigned a value but never used.","'userId' is assigned a value but never used.","'casas' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'obtenerCasas'. Either include it or remove the dependency array.",["235"],"'onSubmit' is assigned a value but never used.","'navegar' is assigned a value but never used.","'response' is assigned a value but never used.","'result' is assigned a value but never used.","'useRef' is defined but never used.","'isloadingHabitaciones' is assigned a value but never used.","'slideIndex' is assigned a value but never used.","'setSlideIndex' is assigned a value but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'errors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getArmarios' and 'getHabitaciones'. Either include them or remove the dependency array.",["236"],"'modalAgregar' is assigned a value but never used.","'abrirModalCasas' is assigned a value but never used.","'mostrarBoton' is assigned a value but never used.","'IsLoggedIn' is assigned a value but never used.",["237"],"React Hook useEffect has missing dependencies: 'getArmarios', 'obtenerCasas', and 'obtenerHabitaciones'. Either include them or remove the dependency array.",["238"],"'editarArmario' is assigned a value but never used.","'isLoadingCajones' is assigned a value but never used.","'navigate' is assigned a value but never used.","'cerrarModal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'obtenerArmarios', 'obtenerCajones', and 'obtenerHabitaciones'. Either include them or remove the dependency array.",["239"],"'isLoadingCosas' is assigned a value but never used.","'shouldReload' is assigned a value but never used.","'abrirModal2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'obtenerArmarios', 'obtenerCajones', 'obtenerCasas', 'obtenerHabitaciones', and 'verCosas'. Either include them or remove the dependency array.",["240"],"'isLoadingHabitaciones' is assigned a value but never used.","'value' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'obtenerHabitaciones'. Either include it or remove the dependency array.",["241"],"React Hook useEffect has missing dependencies: 'obtenerCasas' and 'obtenerHabitaciones'. Either include them or remove the dependency array.",["242"],{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},"Update the dependencies array to be: [darkmode, getCasas]",{"range":"263","text":"264"},"Update the dependencies array to be: [getCasas, getHabitaciones, isLoggedIn, verUsuario]",{"range":"265","text":"266"},"Update the dependencies array to be: [obtenerCasas]",{"range":"267","text":"268"},"Update the dependencies array to be: [getArmarios, getHabitaciones]",{"range":"269","text":"270"},"Update the dependencies array to be: [getCasas]",{"range":"271","text":"272"},"Update the dependencies array to be: [getArmarios, obtenerCasas, obtenerHabitaciones]",{"range":"273","text":"274"},"Update the dependencies array to be: [obtenerArmarios, obtenerCajones, obtenerHabitaciones]",{"range":"275","text":"276"},"Update the dependencies array to be: [obtenerArmarios, obtenerCajones, obtenerCasas, obtenerHabitaciones, verCosas]",{"range":"277","text":"278"},"Update the dependencies array to be: [habitacionesLength, habitaciones, setValue, obtenerHabitaciones]",{"range":"279","text":"280"},"Update the dependencies array to be: [obtenerCasas, obtenerHabitaciones]",{"range":"281","text":"282"},[2192,2202],"[darkmode, getCasas]",[8378,8390],"[getCasas, getHabitaciones, isLoggedIn, verUsuario]",[1384,1386],"[obtenerCasas]",[1714,1716],"[getArmarios, getHabitaciones]",[1110,1112],"[getCasas]",[1212,1214],"[getArmarios, obtenerCasas, obtenerHabitaciones]",[1327,1329],"[obtenerArmarios, obtenerCajones, obtenerHabitaciones]",[9438,9440],"[obtenerArmarios, obtenerCajones, obtenerCasas, obtenerHabitaciones, verCosas]",[1770,1814],"[habitacionesLength, habitaciones, setValue, obtenerHabitaciones]",[1895,1897],"[obtenerCasas, obtenerHabitaciones]"]